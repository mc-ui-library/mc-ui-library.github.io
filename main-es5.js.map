{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///projects/mc-ui/src/lib/components/base.component.ts","webpack:///projects/mc-ui/src/lib/components/drawer/drawer.component.ts","webpack:///projects/mc-ui/src/lib/components/drawer/drawer.component.html","webpack:///projects/mc-ui/src/lib/components/form/fields/text/text.component.ts","webpack:///projects/mc-ui/src/lib/components/form/fields/text/text.component.html","webpack:///projects/mc-ui/src/lib/components/grid/grid-body.component.ts","webpack:///projects/mc-ui/src/lib/components/grid/grid-body.component.html","webpack:///projects/mc-ui/src/lib/components/grid/grid-header.component.ts","webpack:///projects/mc-ui/src/lib/components/grid/grid-header.component.html","webpack:///projects/mc-ui/src/lib/components/grid/grid.component.ts","webpack:///projects/mc-ui/src/lib/components/grid/grid.component.html","webpack:///projects/mc-ui/src/lib/components/icon/icon.component.ts","webpack:///projects/mc-ui/src/lib/components/index.ts","webpack:///projects/mc-ui/src/lib/components/list/list-item.component.ts","webpack:///projects/mc-ui/src/lib/components/list/list-item.component.html","webpack:///projects/mc-ui/src/lib/components/list/list.component.ts","webpack:///projects/mc-ui/src/lib/components/list/list.component.html","webpack:///projects/mc-ui/src/lib/components/loader/loader.component.ts","webpack:///projects/mc-ui/src/lib/components/loader/loader.component.html","webpack:///projects/mc-ui/src/lib/components/mask/mask.component.ts","webpack:///projects/mc-ui/src/lib/components/popup/popup.component.ts","webpack:///projects/mc-ui/src/lib/components/popup/popup.component.html","webpack:///projects/mc-ui/src/lib/components/scroll/scroll.component.ts","webpack:///projects/mc-ui/src/lib/components/scroll/scroll.component.html","webpack:///projects/mc-ui/src/lib/components/scrollbar/scrollbar.component.ts","webpack:///projects/mc-ui/src/lib/components/scrollbar/scrollbar.component.html","webpack:///projects/mc-ui/src/lib/components/visualizer/axis/axis.component.ts","webpack:///projects/mc-ui/src/lib/components/visualizer/bar/bar.component.ts","webpack:///projects/mc-ui/src/lib/components/visualizer/bar/bar.component.html","webpack:///projects/mc-ui/src/lib/components/visualizer/line/line.component.ts","webpack:///projects/mc-ui/src/lib/components/visualizer/line/line.component.html","webpack:///projects/mc-ui/src/lib/components/visualizer/visualizer.component.ts","webpack:///projects/mc-ui/src/lib/mc-ui.module.ts","webpack:///projects/mc-ui/src/lib/shared.models.ts","webpack:///projects/mc-ui/src/lib/shared.service.ts","webpack:///projects/mc-ui/src/lib/utils/data-utils.ts","webpack:///projects/mc-ui/src/lib/utils/dom-utils.ts","webpack:///projects/mc-ui/src/lib/utils/grid-utils.ts","webpack:///projects/mc-ui/src/lib/utils/utils.ts","webpack:///projects/mc-ui/src/lib/utils/viz-utils.ts","webpack:///projects/mc-ui/src/public-api.ts","webpack:///src/app/app-base.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","BaseComponent","er","_subscriptions","defaultConfig","defaultState","initialized","rendered","action","el","nativeElement","componentName","initCmp","afterInitCmp","_config","themes","applyThemes","afterRenderCmp","emitRenderedActionEvent","unsubscribeAll","destroyCmp","state","config","initThemes","applyConfig","applyConfigToState","applyState","Object","assign","appliedThemeClasses","classList","remove","beforeThemeInit","add","afterThemeInit","forEach","s","unsubscribe","target","RENDERED","emit","init","value","push","DrawerComponent","from","tpl","mask","style","visibility","display","setTimeout","drawerEl","drawerEr","width","clientWidth","height","clientHeight","translateY","translateX","top","right","bottom","left","transform","opacity","HID","hide","onClickMask","selector","styleUrls","templateUrl","TextComponent","type","text","name","placeholder","inputEr","subscriptions","pipe","subscribe","onKeyUp","CHANGE","oldValue","inputEl","event","KEY_UP","GridBodyComponent","cd","selectedRowsOfGridBody","Theme","Icon","rowBordersWidth","GridAction","data","rowHeight","columns","idField","startRowIndex","tpls","hasAccordionRow","selectedCell","accordionContentTpl","selectedRowsMap","Map","selectCellByMouseOver","selectableCell","accordionContentHeight","selectedRows","multiSelectRow","pageIndex","theme","length","cellClass","cellEl","onSelectCell","rowClass","rowEl","onSelectRow","children","bindEvents","addEventListener","onMouseover","bind","detectChanges","row","meta","__meta__","rowIndex","rowMeta","cls","isSelectedRow","getStringRowID","map","t","join","colIndex","column","align","toLowerCase","noOverflowMask","selectable","col","fieldMeta","field","$implicit","cellData","cellMetaData","rowCount","colCount","title","has","dataset","SELECT_ROW","row_index","rowDataIndex","row_data_index","rowData","accordionContentEl","querySelector","UNSELECT_ROW","SELECT_CELL","cellIndex","cell_index","MOUSEOVER_CELL","actionEvent","setState","reduce","set","GridHeaderComponent","nextSortDirection","ASC","DESC","SortDirection","fieldColumnMap","atLeastOneSelectedColumnRequired","selectedColumns","sortItem","fieldName","direction","selectedColumnsMap","get","contains","onSort","onSelect","d","showHeader","item","size","lastColIndex","i","sortDirection","isLastRow","isFirstRow","isFirstCol","isLastCol","headerData","concat","rows","lastIndex","r","c","cell","colspan","rowspan","j","sort","selectableHeader","classes","split","dir","SORT","unselectColumn","SELECT_COLUMN","getSelectedColumns","selectColumn","_columns","getBasicHeaderData","getHeaderData","ACCORDION_ARROW_COLUMN","fixedWidth","CENTER","GridComponent","service","defaultColumnWidth","renderedBodyComponentMetaMap","emptyPageIndexes","idRowIndexMap","renderedPagesMap","Set","scrollConfig","headerConfig","bodyHeight","bodyWidth","columnTpls","columnWidthIsRatio","emptyText","displayLoader","headerRowHeight","headerTpls","loadingText","minPageRowCount","adjustHeight","windowResize","onResizeWindow","initColumns","setHeaderConfig","setScrollConfig","getSortItem","initSize","len","selected","removed","bodyComponentMeta","ref","gridBodyComponentRef","instance","getSelectedRows","addExtraHeight","bodyCmpRef","getSelectedRowsOfGridBody","accordionHeight","getAccordionContentHeight","extraHeightPages","openedAccordionPageIndex","extraHeight","scrollCmp","updateExtraHeight","sortCol","find","lastContainerWidth","resizedContainerWidth","resize","parentElement","updateColumnWidth","updateBodySize","rerenderPages","headerEl","headerHeight","dataHeight","pageRowCount","addComponent","getBodyConfig","subscription","onGridBodyAction","emitAction","REMOVE_PAGE","removeComponent","removeGridBody","getBasicGridActionEvent","values","scrollByRowIndex","console","warn","scrollById","click","accordionAnimationDuration","clear","applySelectedRows","pageIndexes","pages","pageElements","neededStartRowIndex","Infinity","neededEndRowIndex","page","endRowIndex","renderGridBody","slice","Math","min","max","isLoading","GET_DATA","removeGridBodyAll","renderPages","currentPageIndexes","oldIndexes","newIndexes","filter","includes","UPDATE_PAGES","oldPageIndexes","removePageIndexes","getRemovingPageIndexes","GET_ROW_COUNT","selectRow","unselectRow","applySelectedCell","newData","APPEND","INIT","oldData","_data","RELOAD","onHeaderAction","onScrollAction","IconComponent","icon","ListItemComponent","nameField","toggleSelect","horizontal","lineHeight","SELECT_ITEM","UNSELECT_ITEM","ListComponent","_selectedItems","selectedItemsMap","multiSelect","itemTpl","hasSelectedItem","selectedItems","items","actionType","selectedItem","getSelectedItems","selectItem","unselectItem","LoaderComponent","MaskComponent","visible","transparent","PopupComponent","bodyEventLock","indicatorHeight","checkTargetLocation","startFrom","BOTTOM","offsetX","offsetY","targetEl","hasIndicator","center","hasBorder","hasCloseButton","bodyPress","onPressBody","lastTargetElCoord","getBoundingClientRect","resizeOnly","holdBodyEvent","uncheckTargetLocation","checkTargetElLocation","coords","getCoords","classNames","className","indicatorIsTop","indicatorIsLeft","targetSize","popupSize","windowSize","getWindowSize","TOP","show","checkTargetElLocationIntervalId","window","setInterval","info","lastInfo","clearInterval","innerWidth","document","documentElement","body","innerHeight","pos","compareDocumentPosition","onClickCloseButton","ScrollComponent","scrollTop","oldScrollTop","ticking","getPageRowCount","requestRowCount","updatePages","getPages","Array","BUFFER","containerHeight","offsetHeight","floor","remainRowCount","currentRowCount","index","getPageElements","isDown","pageCount","prevPagesHeightSum","some","pageHeight","unshift","getPageHeight","extraHeightPage","hasEnoughSpaceToDisplay","getCurrentPageIndexes","hasDifferentPage","getScrollTopByRowIndex","scrollBarCmp","scrollToY","SCROLL_Y","requestAnimationFrame","_rowCount","initPages","ScrollbarComponent","suppressScrollX","directiveRef","scrollToTop","scrollToBottom","query","offset","scrollToElement","y","emitActionEvent","SCROLL_Y_END","onScrollY","onScrollYEnd","AxisComponent","BAR","labelField","dataFields","data2Fields","hasGrid","ticks","scalePadding","scalePaddingInner","scalePaddingOuter","decorationMaxRate","render","fields","visualizerSize","minMax","yScale","domain","rangeRound","chart","yAxis","y2Scale","y2Axis","minMax2","labels","getLabels","xScale","padding","paddingInner","paddingOuter","barConfig","barWidth","barGroupWidth","bandwidth","newBarGroupWidth","widthGap","extraWidth","xAxis","colorScale","fields2","unit","svg","LEFT","RIGHT","margin","innerHTML","getUnit","getSize","renderInfo","template","BarComponent","axisConfig","onAxisAction","LineComponent","LINE","VisualizerComponent","sharedService","compSubs","GRID","gridConfig","rednerGrid","renderBar","renderLine","removeContent","cr","cfg","McUiModule","imports","declarations","providers","Align","ComponentTheme","PopupStartFrom","Location","InputType","DataType","ListAction","ScrollDataAction","ScrollbarAction","ComponentAction","GridAccordionAction","ScrollAction","InputAction","VisualizerAction","VisualizerType","VisualizerScaleType","VisualizerMetaField","SharedService","_resolver","injector","appRef","_message","to","message","asObservable","getBody","key","next","cmpType","parentEl","factory","resolveComponentFactory","cmp","create","attachView","hostView","appendChild","location","detachView","destroy","sortObjectArray","a","b","valA","valB","localeCompare","setStateIf","source","convertCsvToJson","result","header","error","convertKeysToColumns","obj","convertCsvToVisualizerData","filters","keyword","DATE","NUMBER","getComponentNameByElement","tagName","shift","getThemeClasses","compName","isArray","agg","getContainerWidth","conEl","stylePosition","position","findParentDom","dom","stopClassName","depth","resultDom","nodeName","startsWith","parentNode","getAutoColumnWidth","containerWidth","minWidth","hasColWidth","totalFixedWidth","totalWidth","tot","adjustContainerWidth","adjustTotalWidth","remainWidth","getEvenColumnWidth","colWidth","isEmpty","val","undefined","debounce","callback","wait","context","timeout","args","clearTimeout","apply","getMinMax","mm","isNaN","renderChartContainer","append","attr","renderAxis","axis","themeClass","call","rotateXAxisText","selectAll","getSVGSize","getBBox","renderGrid","tickSize","tickFormat","getAxisSize","boxSize","applyXAxisTextSize","initVisualizerSize","offsetWidth","els","querySelectorAll","tickWidth","getTranslateX","lastTextSize","maxWidth","_el","textHeight","getAttribute","renderRects","animDuration","xScaleInner","rects","enter","label","exit","transition","duration","ease","h","abs","renderLines","fieldLabelValueMap","labelValues","lineData","line","x","path","totalLength","getTotalLength","circle","circles","AppBaseComponent","vcr","element","_","routes","AppRoutingModule","forRoot","AppComponent","appService","getNasdaqCompanies","symbol","getDailyDataBySymbol","dailyData","barData","loadCompanies","loadDailyDataBySymbol","Symbol","onTextAction","onCompanyVizAction","AppModule","bootstrap","AppService","http","responseType","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {\n  ElementRef,\n  OnInit,\n  OnDestroy,\n  AfterViewInit,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { getComponentNameByElement, getThemeClasses } from '../utils/dom-utils';\nimport {\n  ComponentConfig,\n  ComponentAction,\n  ComponentActionEvent\n} from '../shared.models';\nimport { setStateIf, setState } from '../utils/data-utils';\n\n/**\n * Angular Change Detection\n * https://www.mokkapps.de/blog/the-last-guide-for-angular-change-detection-you-will-ever-need/\n * It checks all the values or property of a value that are used by the component template.\n * If a property of an object is used for the template, it checks only the property value even if the obejct is changed.\n * The object is changed, but the property value of the object that is used by the template is not changed,\n * it will not trigger the change detection.\n * If you don't want to check the property that is used by the template, you can use \"changeDetection: ChangeDetectionStrategy.OnPush\".\n * If you change the property of an object that is used by the template.\n * The detector only check the object is changed or not when using OnPush.\n * If you use \"OnPush\", you may need immutable.js library for immutable object.\n */\n\n/**\n * Design Concept\n * - \"config\" property for static configuration. It helps to reduce one time properties.\n * - You can add other properties for change detection for updating the component template,\n *    but the default values are from the \"config\" after that you can update the property for the change detection.\n * - it has only one Output that is an \"action\" event for easy to type the events and management.\n * - The \"state\" variable for managing the properties that are used for the template.\n *    It is mutable since the Angular default change detection strategy supports to check the properties also.\n *    If you use the OnPush strategy, we don't use state property for triggering the change detection.\n *    If you want to mutate the \"state\" for updating the template after setting the \"config\", you can use a property for that.\n */\nexport class BaseComponent implements OnInit, OnDestroy, AfterViewInit {\n  // internal state\n  private _subscriptions: Array<Subscription> = [];\n  private appliedThemeClasses: string[];\n\n  // you can add default config properties.\n  defaultConfig: ComponentConfig = {};\n\n  _config: ComponentConfig;\n\n  // you can add default state properties for the template. state has all the properties that are used by the template\n  defaultState: any = {};\n\n  // if you want to update the template after rendered the component,\n  // you can use a specific \"Input\" property for mutating the state property.\n  state: any;\n  componentName: string;\n  initialized = false;\n  rendered = false;\n  el: HTMLElement;\n\n  @Input()\n  set config(config: any) {\n    if (config) {\n      // copy the default config values and update config.\n      if (!this._config) {\n        this._config = setState(this.defaultConfig, config);\n      } else {\n        this._config = setState(this._config, config);\n      }\n      this.init(this._config);\n    }\n  }\n  get config() {\n    return this._config;\n  }\n\n  @Output() action = new EventEmitter<any>();\n\n  constructor(protected er: ElementRef) {\n    this.el = this.er.nativeElement;\n    this.componentName = getComponentNameByElement(this.el);\n  }\n\n  ngOnInit() {\n    this.initCmp();\n  }\n\n  ngAfterViewInit() {\n    this.afterInitCmp();\n    if (this._config && this._config.themes) {\n      this.applyThemes(this._config.themes);\n    }\n    this.afterRenderCmp();\n    this.rendered = true;\n    this.emitRenderedActionEvent();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribeAll();\n    this.destroyCmp();\n    this.el = null;\n    this._config = null;\n    this.state = null;\n  }\n\n  set subscriptions(value: Subscription) {\n    if (value) {\n      this._subscriptions.push(value);\n    }\n  }\n\n  init(config: any) {\n    this.initThemes(config.themes);\n    this.applyConfig(config);\n    this.applyConfigToState(config);\n    this.applyState(config);\n    this.initialized = true;\n  }\n\n  applyConfig(config: any) {\n    // for mutating the config before using that for the state. after this, this._config is readonly value.\n  }\n\n  applyConfigToState(config: any) {\n    // copy some config values that are used for the template.\n    if (!this.state) {\n      this.state = setStateIf(this.defaultState, config);\n    } else {\n      this.state = setStateIf(this.state, config);\n    }\n  }\n\n  applyState(config: any) {}\n\n  setState(state: any) {\n    // it mutates the state since Angular default change detection checks the property also.\n    Object.assign(this.state, state);\n  }\n\n  initThemes(themes: Array<string>) {\n    this.applyThemes(themes);\n  }\n\n  applyThemes(themes: Array<string>) {\n    if (this.rendered) {\n      if (this.appliedThemeClasses) {\n        this.el.classList.remove(...this.appliedThemeClasses);\n      }\n    }\n    this.beforeThemeInit();\n    if (themes) {\n      themes = getThemeClasses(this.componentName, themes);\n      this.el.classList.add(...themes);\n      this.appliedThemeClasses = themes;\n    }\n    this.afterThemeInit();\n  }\n\n  beforeThemeInit() {}\n\n  afterThemeInit() {}\n\n  initCmp() {}\n\n  afterInitCmp() {}\n\n  afterRenderCmp() {}\n\n  unsubscribeAll() {\n    this._subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  emitRenderedActionEvent() {\n    const action: ComponentActionEvent = {\n      target: this,\n      action: ComponentAction.RENDERED\n    };\n    this.action.emit(action);\n  }\n\n  destroyCmp() {\n    // to remove dom elements reference etc.\n  }\n}\n","import { ComponentAction, ComponentActionEvent } from '../../shared.models';\nimport { Component, Input, ElementRef, TemplateRef, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { BaseComponent } from '../base.component';\nimport { DrawerConfig } from '../../shared.models';\n\ninterface State {\n  mask: boolean;\n  tpl: TemplateRef<any>;\n}\n\n/**\n- Add drawer.component: This is almost the same as the Popup.component, but it is sliding from the top/left/bottom/right with animation effect. The popup and drawer components are dynamic container components for adding them to the body element.\n- mask.component: This is used by drawer.component or some components that needs a mask. When drawer component has a smaller content component than the drawer, the empty part will be the mask component. It can have a opacity valued or transparent background.\n */\n@Component({\n  selector: 'mc-drawer',\n  styleUrls: ['drawer.component.scss'],\n  templateUrl: 'drawer.component.html'\n})\nexport class DrawerComponent extends BaseComponent {\n  defaultConfig: DrawerConfig = {\n    from: 'top',\n    tpl: null,\n    mask: true\n  };\n\n  _config: DrawerConfig;\n\n  defaultState: State = {\n    mask: true,\n    tpl: null\n  };\n\n  state: State;\n\n  @ViewChild('drawerEr') drawerEr: ElementRef;\n\n  constructor(protected er: ElementRef) {\n    super(er);\n  }\n\n  // after rendering, measure the size and hide and show.\n  show() {\n    this.el.style.visibility = 'hidden';\n    this.el.style.display = '';\n    // after the targetEl is changed.\n    setTimeout(() => {\n      const drawerEl = this.drawerEr.nativeElement;\n      const width = drawerEl.clientWidth;\n      const height = drawerEl.clientHeight;\n      let translateY = null;\n      let translateX = null;\n      let top = 'unset';\n      let right = 'unset';\n      let bottom = 'unset';\n      let left = 'unset';\n      switch (this._config.from) {\n        case 'top':\n          translateY = `-${height}px`;\n          top = '0';\n          break;\n        case 'bottom':\n          translateY = `${height}px`;\n          bottom = '0';\n          break;\n        case 'left':\n          translateX = `-${width}px`;\n          left = '0';\n          break;\n        case 'right':\n          translateX = `${width}px`;\n          right = '0';\n          break;\n      }\n      const style = drawerEl.style;\n      style.transform = translateY === null ? `translateX(${translateX})` : `translateY(${translateY})`;\n      style.opacity = '0';\n      style.left = left;\n      style.right = right;\n      style.bottom = bottom;\n      style.top = top;\n      if (translateY) {\n        style.width = '100%';\n      } else {\n        style.height = '100%';\n      }\n      this.el.style.visibility = '';\n      // animation\n      setTimeout(() => {\n        drawerEl.classList.add('drawer-anim');\n        style.transform = translateY === null ? `translateX(0)` : `translateY(0)`;\n        style.opacity = '1';\n        setTimeout(() => drawerEl.classList.remove('drawer-anim'), 300);\n      }, 100);\n    });\n  }\n\n  hide() {\n    this.el.style.display = 'none';\n    const action: ComponentActionEvent = {\n      action: ComponentAction.HID,\n      target: this\n    };\n    this.action.emit(action);\n  }\n\n  onClickMask() {\n    this.hide();\n  }\n}\n","<mc-mask\n  [config]=\"{ visible: true, transparent: !state?.mask }\"\n  (click)=\"onClickMask()\"\n></mc-mask>\n<div #drawerEr class=\"drawer\">\n  <ng-container *ngTemplateOutlet=\"state?.tpl\"></ng-container>\n</div>\n","import { BaseComponent } from '../../../base.component';\nimport {\n  Component,\n  Output,\n  ViewChild,\n  EventEmitter,\n  ElementRef,\n} from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport {\n  InputType,\n  TextConfig,\n  InputActionEvent,\n  InputAction\n} from './../../../../shared.models';\n\ninterface State {\n  type: InputType;\n  name: string;\n  value: string;\n  placeholder: string;\n}\n\n@Component({\n  selector: 'mc-text',\n  styleUrls: ['text.component.scss'],\n  templateUrl: './text.component.html'\n})\nexport class TextComponent extends BaseComponent {\n  defaultConfig: TextConfig = {\n    type: InputType.text,\n    name: 'text',\n    value: '',\n    placeholder: ''\n  };\n\n  _config: TextConfig;\n\n  defaultState: State = {\n    type: InputType.text,\n    name: '',\n    value: '',\n    placeholder: ''\n  };\n\n  @ViewChild('inputEr') private inputEr: ElementRef;\n\n  @Output() action = new EventEmitter<InputActionEvent>();\n\n  constructor(protected er: ElementRef) {\n    super(er);\n  }\n\n  applyConfig(config: TextConfig) {\n    if (!config.placeholder) {\n      config.placeholder = config.name;\n    }\n  }\n\n  afterRenderCmp() {\n    const el = this.inputEr.nativeElement;\n    this.subscriptions = fromEvent(el, 'keyup')\n      .pipe(debounceTime(300))\n      .subscribe((e: KeyboardEvent) => this.onKeyUp(e));\n    if (this._config.value) {\n      this.action.emit({\n        target: this,\n        action: InputAction.CHANGE,\n        name: this._config.name,\n        el: this.inputEr.nativeElement,\n        value: this._config.value,\n        oldValue: ''\n      });\n    }\n  }\n\n  onKeyUp(e: KeyboardEvent) {\n    const inputEl = e.target as HTMLInputElement;\n    const value = inputEl.value;\n    if (value !== this._config.value) {\n      const oldValue = this._config.value;\n      this._config.value = value;\n      this.action.emit({\n        target: this,\n        action: InputAction.CHANGE,\n        name: this._config.name,\n        el: inputEl,\n        event: e,\n        value,\n        oldValue\n      });\n    }\n    this.action.emit({\n      target: this,\n      action: InputAction.KEY_UP,\n      name: this._config.name,\n      el: inputEl,\n      event: e,\n      value\n    });\n  }\n}\n","<input #inputEr [type]=\"state?.type\" [name]=\"state?.name\" [value]=\"state?.value\" [placeholder]=\"state?.placeholder\">\n","import { GridRowMeta, GridFieldMeta, GridRowDataMeta, Icon, ComponentTheme } from './../../shared.models';\nimport { GridAction, GridCellInfo, Column, GridBodyConfig, GridBodyActionEvent } from '../../shared.models';\nimport { BaseComponent } from '../base.component';\nimport { Component, ElementRef, HostListener, TemplateRef, Input, ChangeDetectorRef } from '@angular/core';\nimport { findParentDom } from '../../utils/dom-utils';\n\n/**\n * Row or Cell selection is managed by grid component since selected cell and selected rows are just readonly properties\n */\n\ninterface State {\n  data: Array<any>;\n  rowHeight: number;\n  columns: Array<Column>;\n  idField: string;\n  startRowIndex: number;\n  tpls: any;\n  hasAccordionRow: boolean;\n  selectedCell: GridCellInfo;\n  accordionContentTpl: TemplateRef<any>;\n  selectedRowsMap: Map<string, GridRowDataMeta>;\n}\n\n@Component({\n  selector: 'mc-grid-body',\n  styleUrls: ['grid-body.component.scss'],\n  templateUrl: './grid-body.component.html'\n})\nexport class GridBodyComponent extends BaseComponent {\n  private selectedRowsOfGridBody: Array<any> = [];\n\n  Theme = ComponentTheme;\n  Icon = Icon;\n\n  rowBordersWidth = 2;\n  GridAction = GridAction;\n\n  defaultState: State = {\n    data: [],\n    rowHeight: 30,\n    columns: [],\n    idField: 'id',\n    startRowIndex: 0,\n    tpls: {},\n    hasAccordionRow: false,\n    selectedCell: null,\n    accordionContentTpl: null,\n    selectedRowsMap: new Map<string, any>()\n  };\n\n  state: State;\n\n  defaultConfig: GridBodyConfig = {\n    rowHeight: 30,\n    idField: 'id',\n    tpls: {},\n    selectCellByMouseOver: false,\n    data: [],\n    columns: [],\n    startRowIndex: 0,\n    selectableCell: false,\n    selectedCell: null,\n    // accordion\n    hasAccordionRow: false,\n    accordionContentTpl: null,\n    accordionContentHeight: 300,\n    selectedRows: null,\n    multiSelectRow: false,\n    pageIndex: null\n  };\n\n  _config: GridBodyConfig;\n\n  @Input()\n  set selectedCell(selectedCell: GridCellInfo) {\n    this.setState({ selectedCell });\n  }\n\n  @Input()\n  set selectedRows(selectedRows: Array<any>) {\n    this.selectedRowsOfGridBody = [];\n    const selectedRowsMap = selectedRows.reduce(\n      (map, row) => map.set(this.getStringRowID(row), row),\n      new Map<string, any>()\n    );\n    this.setState({ selectedRowsMap });\n  }\n\n  @HostListener('click', ['$event'])\n  onPress(e: MouseEvent) {\n    // TODO: when there is no theme, this is not working. it may need to be added a unique theme id.\n    // When a grid contains a grid as a accordion content, it has same \".cell\", we need to check this cell is in this grid or not.\n    const theme = this._config.themes.length ? this._config.themes[0] : '';\n    if (this._config.selectableCell) {\n      const cellClass = theme ? '.' + theme + '-cell' : '.cell';\n      const cellEl = findParentDom(e.target, cellClass);\n      if (cellEl) {\n        this.onSelectCell(e, cellEl);\n      }\n    }\n    const rowClass = theme ? '.' + theme + '-row' : '.row';\n    const rowEl = findParentDom(e.target, rowClass);\n    if (rowEl) {\n      this.onSelectRow(e, rowEl.children[0] as HTMLElement); // .cells\n    }\n  }\n\n  constructor(protected er: ElementRef, private cd: ChangeDetectorRef) {\n    super(er);\n  }\n\n  afterInitCmp() {\n    this.bindEvents();\n  }\n\n  bindEvents() {\n    // separate mouseover event for the performance of change detection\n    if (this._config.selectCellByMouseOver) {\n      this.el.addEventListener('mouseover', this.onMouseover.bind(this));\n    }\n  }\n\n  applyState(config: GridBodyConfig) {\n    this.selectedRows = config.selectedRows;\n    // TODO: state is not updated....\n    this.cd.detectChanges();\n  }\n\n  getAccordionContentHeight(row: any) {\n    const meta: GridRowMeta = row && row.__meta__ ? row.__meta__ : {};\n    return meta.accordionContentHeight || this._config.accordionContentHeight;\n  }\n\n  getStringRowID(row: any) {\n    return '' + row[this._config.idField];\n  }\n\n  getGridRowClassName(rowIndex: number, row: any) {\n    const config = this._config;\n    const startRowIndex = config.startRowIndex;\n    const rowMeta: GridRowMeta = row.__meta__;\n    const cls = ['row'];\n    if (rowIndex + startRowIndex === 0) {\n      cls.push('is-first-row');\n    }\n    cls.push((rowIndex + startRowIndex) % 2 ? 'row-odd' : 'row-even');\n    if (rowMeta && rowMeta.class) {\n      cls.push(rowMeta.class);\n    }\n    if (this.isSelectedRow(this.getStringRowID(row))) {\n      this.selectedRowsOfGridBody.push(row);\n      cls.push('selected');\n    }\n    if (config.themes && config.themes.length) {\n      cls.push(...config.themes.map(t => t + '-row'));\n    }\n    return cls.join(' ');\n  }\n\n  getGridCellClassName(rowIndex: number, colIndex: number, column: Column) {\n    const cls = ['cell'];\n    const config = this._config;\n    const selectedCell = config.selectedCell;\n    const startRowIndex = config.startRowIndex;\n    if (column.align) {\n      cls.push('align-' + column.align.toLowerCase());\n    }\n    if (!column.noOverflowMask) {\n      cls.push('overflow-mask');\n    }\n    if (column.selectable === false) {\n      cls.push('unselectable');\n    }\n    if (\n      column.selectable &&\n      selectedCell &&\n      selectedCell.row === rowIndex + startRowIndex &&\n      selectedCell.col === colIndex\n    ) {\n      cls.push('selected');\n    }\n    if (column.class) {\n      cls.push(column.class);\n    }\n    if (config.themes && config.themes.length) {\n      cls.push(...config.themes.map(t => t + '-cell'));\n    }\n    return cls.join(' ');\n  }\n\n  getTplContext(row: any, column: Column, rowIndex: number, colIndex: number) {\n    const config = this._config;\n    const fieldMeta: GridFieldMeta =\n      row.__meta__ && row.__meta__.fieldMeta ? row.__meta__.fieldMeta[column.field] : null;\n    return {\n      $implicit: row,\n      column: column,\n      rowIndex: rowIndex + config.startRowIndex,\n      cellData: row[column.field],\n      cellMetaData: fieldMeta,\n      colIndex,\n      rowCount: config.data.length,\n      colCount: config.columns.length\n    };\n  }\n\n  getTitle(field, row) {\n    const fieldMeta: GridFieldMeta = row.__meta__ && row.__meta__.fieldMeta ? row.__meta__.fieldMeta[field] : {};\n    const title = fieldMeta.title || row[field];\n    return typeof title === 'string' ? title : '';\n  }\n\n  isSelectedRow(id: any) {\n    return this.state.selectedRowsMap && this.state.selectedRowsMap.has('' + id);\n  }\n\n  getSelectedRowsOfGridBody() {\n    return this.selectedRowsOfGridBody;\n  }\n\n  onSelectRow(event: MouseEvent, el: HTMLElement) {\n    const dataset = el.dataset;\n    switch (dataset.action) {\n      case GridAction.SELECT_ROW:\n        const selectedRowsMap = this.state.selectedRowsMap;\n        const id = dataset.id;\n        const rowIndex = +dataset.row_index;\n        const rowDataIndex = +dataset.row_data_index;\n        const rowData = this.state.data[rowDataIndex];\n        let action = GridAction.SELECT_ROW;\n        let accordionContentEl: HTMLElement;\n        if (this.state.hasAccordionRow) {\n          accordionContentEl = findParentDom(el, '.row').querySelector('.row--content--container');\n        }\n        if (selectedRowsMap.has(id)) {\n          action = GridAction.UNSELECT_ROW;\n        }\n        this.action.emit({\n          target: this,\n          event,\n          rowEl: el,\n          action,\n          id,\n          rowIndex,\n          rowData,\n          accordionContentEl,\n          pageIndex: this._config.pageIndex\n        });\n        break;\n    }\n  }\n\n  onSelectCell(event: MouseEvent, el: HTMLElement, action: GridAction = null) {\n    const dataset = el.dataset;\n    action = action || (dataset.action as GridAction);\n    const config = this._config;\n    switch (dataset.action) {\n      case GridAction.SELECT_CELL:\n        const rowIndex = +dataset.row_index;\n        const cellIndex = +dataset.cell_index;\n        const field = dataset.field;\n        const rowData = config.data[rowIndex - config.startRowIndex];\n        const cellData = rowData ? rowData[field] : null;\n        let selectedCell: GridCellInfo = null;\n        if (action !== GridAction.MOUSEOVER_CELL) {\n          selectedCell = {\n            row: rowIndex,\n            col: cellIndex,\n            data: cellData\n          };\n        }\n        const actionEvent: GridBodyActionEvent = {\n          event,\n          cellEl: el,\n          action,\n          target: this,\n          id: dataset.id,\n          rowIndex,\n          cellIndex,\n          field,\n          rowData,\n          cellData,\n          selectedCell,\n          pageIndex: this._config.pageIndex\n        };\n        this.action.emit(actionEvent);\n        break;\n    }\n  }\n\n  onMouseover(e: MouseEvent) {\n    const el = findParentDom(e.target, '.cell');\n    if (el) {\n      this.onSelectCell(e, el, GridAction.MOUSEOVER_CELL);\n    }\n  }\n}\n","<div\n  *ngFor=\"let row of state?.data; index as r\"\n  [class]=\"getGridRowClassName(r, row)\"\n>\n  <div\n    class=\"cells\"\n    [attr.data-id]=\"row[state.idField]\"\n    [attr.data-action]=\"GridAction.SELECT_ROW\"\n    [attr.data-row_data_index]=\"r\"\n    [attr.data-row_index]=\"r + state.startRowIndex\"\n    [style.height.px]=\"state.rowHeight - rowBordersWidth\"\n    [style.lineHeight.px]=\"state.rowHeight - rowBordersWidth\"\n  >\n    <div\n      *ngFor=\"let column of state.columns; index as c\"\n      [class]=\"getGridCellClassName(r, c, column)\"\n      [style.width.px]=\"column.width\"\n      [title]=\"getTitle(column.field, row)\"\n      [attr.data-field]=\"column.field\"\n      [attr.data-id]=\"row[state.idField]\"\n      [attr.data-row_index]=\"r + state.startRowIndex\"\n      [attr.data-cell_index]=\"c\"\n      [attr.data-action]=\"column.selectable === false ? '' : GridAction.SELECT_CELL\"\n    >\n      <ng-container\n        *ngTemplateOutlet=\"state.tpls[column.field]; context: getTplContext(row, column, r, c)\"\n      >\n      </ng-container\n      >{{ state.tpls[column.field] ? '' : row[column.field] || '&nbsp;' }}\n    </div>\n    <div *ngIf=\"state.hasAccordionRow\" class=\"cell-accordion\">\n      <mc-icon\n        [config]=\"{ icon: Icon.chevron, themes: [Theme.gridBodyAccordion] }\"\n        [class.flip]=\"isSelectedRow(row[state.idField])\"\n      ></mc-icon>\n    </div>\n  </div>\n  <div\n    *ngIf=\"state.hasAccordionRow\"\n    class=\"row--content\"\n    [style.height.px]=\"isSelectedRow(row[state.idField]) ? getAccordionContentHeight(row) : 0\"\n  >\n    <div\n      class=\"row--content--container\"\n      [style.height.px]=\"getAccordionContentHeight(row)\"\n    >\n      <ng-container\n        *ngTemplateOutlet=\"state.accordionContentTpl; context: { $implicit: row }\"\n      ></ng-container>\n    </div>\n  </div>\n</div>\n","import { Icon, ComponentTheme } from './../../shared.models';\nimport {\n  SortDirection,\n  SortItem,\n  GridAction,\n  Column,\n  GridHeaderCell,\n  GridHeaderConfig,\n  GridHeaderActionEvent\n} from '../../shared.models';\nimport { BaseComponent } from '../base.component';\nimport { Component, ElementRef, Input, HostListener } from '@angular/core';\nimport { findParentDom } from '../../utils/dom-utils';\n\ninterface State {\n  data: Array<Array<GridHeaderCell>>;\n  rowHeight: number;\n  tpls: any;\n  sortItem: SortItem;\n  selectedColumnsMap: Map<string, Column>;\n}\n\n@Component({\n  selector: 'mc-grid-header',\n  styleUrls: ['grid-header.component.scss'],\n  templateUrl: './grid-header.component.html'\n})\nexport class GridHeaderComponent extends BaseComponent {\n  private _columns: Array<Column>;\n\n  private nextSortDirection = {\n    ASC: SortDirection.DESC,\n    DESC: SortDirection.ASC\n  };\n\n  Theme = ComponentTheme;\n  Icon = Icon;\n\n  GridAction = GridAction;\n  SortDirection = SortDirection;\n\n  fieldColumnMap = new Map<string, Column>();\n\n  defaultConfig: GridHeaderConfig = {\n    rowHeight: 30,\n    tpls: {},\n    data: null,\n    atLeastOneSelectedColumnRequired: false,\n    selectedColumns: [],\n    sortItem: {\n      fieldName: '',\n      direction: SortDirection.ASC\n    }\n  };\n\n  _config: GridHeaderConfig;\n\n  defaultState: State = {\n    data: [],\n    rowHeight: 30,\n    tpls: {},\n    sortItem: {\n      fieldName: '',\n      direction: SortDirection.ASC\n    },\n    selectedColumnsMap: new Map<string, Column>()\n  };\n\n  state: State;\n\n  @HostListener('click', ['$event'])\n  onPress(e: MouseEvent) {\n    const el = findParentDom(e.target, '.grid-header--row--cell');\n    if (el) {\n      const dataset = el.dataset;\n      switch (dataset.action) {\n        case GridAction.SELECT_CELL:\n          const column = this.fieldColumnMap.get(dataset.field);\n          if (el.classList.contains('is-sortable')) {\n            this.onSort(el, column, e);\n          }\n          if (!el.classList.contains('unselectable')) {\n            this.onSelect(column, el, e);\n          }\n          break;\n      }\n    }\n  }\n\n  @Input()\n  set columns(columns: Array<Column>) {\n    if (columns) {\n      this._columns = columns;\n      columns.forEach(column => this.fieldColumnMap.set(column.field, column));\n      if (!this._config.data) {\n        this.setState({ data: this.getBasicHeaderData() });\n      } else {\n        this.setState({ data: this.getHeaderData(this._config.data) });\n      }\n    }\n  }\n  get columns() {\n    return this._columns;\n  }\n\n  constructor(protected er: ElementRef) {\n    super(er);\n  }\n\n  applyState(config: GridHeaderConfig) {\n    if (config.selectedColumns) {\n      const selectedColumnsMap = new Map();\n      config.selectedColumns.forEach(d => selectedColumnsMap.set(d.field, d));\n      this.setState({ selectedColumnsMap });\n    }\n    this.showHeader();\n  }\n\n  showHeader() {\n    // for hiding the header before calculating the columns' width.\n    setTimeout(() => (this.el.style.visibility = 'visible'));\n  }\n\n  getSelectedColumns() {\n    const columns = [];\n    this.state.selectedColumnsMap.forEach(value => columns.push(value));\n    return columns;\n  }\n\n  selectColumn(id: string, item) {\n    this.state.selectedColumnsMap.set(id, item);\n  }\n\n  unselectColumn(id: string) {\n    if (this._config.atLeastOneSelectedColumnRequired && this.state.selectedColumnsMap.size === 1) {\n      return false;\n    }\n    this.state.selectedColumnsMap.delete(id);\n    return true;\n  }\n\n  getBasicHeaderData() {\n    const lastColIndex = this.columns.length - 1;\n    return [\n      this.columns.map((column, i) => {\n        if (column.sortDirection) {\n          this.state.sortItem = {\n            direction: column.sortDirection,\n            fieldName: column.field\n          };\n        }\n        return Object.assign(\n          {\n            name: column.name || column.field,\n            isLastRow: true,\n            isFirstRow: true,\n            isFirstCol: i === 0,\n            isLastCol: i === lastColIndex\n          },\n          column\n        );\n      })\n    ];\n  }\n\n  getHeaderData(data: Array<Array<GridHeaderCell>>) {\n    const headerData = data.concat();\n    const columns = this.columns;\n    const lastColIndex = columns.length - 1;\n    const rows = [];\n    // calc col width\n    const lastIndex = headerData.length - 1;\n    headerData.forEach((row: any[], r: number) => {\n      rows[r] = rows[r] || [];\n      let c = 0;\n      row.forEach(cell => {\n        while (rows[r][c] === -1) {\n          c++;\n        }\n        const column = columns[c];\n        cell = Object.assign(cell, column);\n        const colspan = cell.colspan || 1;\n        const rowspan = cell.rowspan || 1;\n        if (r === lastIndex || r + rowspan - 1 === lastIndex) {\n          cell.isLastRow = true;\n        }\n        let width = 0;\n        for (let i = 0; i < colspan; i++) {\n          width += columns[c + i].width;\n        }\n        cell.width = width;\n        // flag the empty cells\n        for (let i = 1; i < rowspan; i++) {\n          for (let j = 0; j < colspan; j++) {\n            rows[r + i] = rows[r + i] || [];\n            rows[r + i][c + j] = -1;\n          }\n        }\n        cell.sort = null;\n        cell.field = null;\n        if (cell.isLastRow) {\n          cell.sort = column.sort;\n          cell.field = column.field;\n          // if it has the existing sort field, keeps it\n          if (column.sortDirection) {\n            this.setState({\n              sortItem: {\n                direction: column.sortDirection,\n                fieldName: column.field\n              }\n            });\n          }\n        }\n        cell.isFirstRow = r === 0;\n        cell.isFirstCol = c === 0;\n        cell.isLastCol = c === lastColIndex;\n        c += colspan;\n      });\n    });\n    return headerData;\n  }\n\n  getGridRowClassName(row: any) {\n    const cls = ['grid-header--row'];\n    return cls.join(' ');\n  }\n\n  getGridCellClassName(cell: any) {\n    const cls = ['grid-header--row--cell'];\n    if (cell.isFirstRow) {\n      cls.push('is-first-row');\n    }\n    if (cell.isLastRow) {\n      cls.push('is-last-row');\n    }\n    if (cell.isFirstCol) {\n      cls.push('is-first-col');\n    }\n    if (cell.isLastCol) {\n      cls.push('is-last-col');\n    }\n    if (cell.sort) {\n      cls.push('is-sortable');\n    }\n    if (cell.selectableHeader !== true) {\n      cls.push('unselectable');\n    }\n    if (cell.align) {\n      cls.push('align-' + cell.align.toLowerCase());\n    }\n    if (cell.class) {\n      cls.push(cell.class);\n    }\n    return cls.join(' ');\n  }\n\n  getGridCellContentClassName(cell: any) {\n    const cls = ['grid-header--row--cell--content'];\n    if (cell.class) {\n      const classes = cell.class.split(' ');\n      classes.forEach(c => {\n        if (c) {\n          cls.push(c + '--content');\n        }\n      });\n    }\n    return cls.join(' ');\n  }\n\n  onSort(el: HTMLElement, column: Column, event: MouseEvent = null) {\n    let dir = SortDirection.ASC;\n    if (this.state.sortItem.fieldName === column.field) {\n      dir = this.nextSortDirection[this.state.sortItem.direction];\n    }\n    const sortItem = {\n      fieldName: column.field,\n      direction: dir\n    };\n    this.setState({ sortItem });\n    const actionEvent: GridHeaderActionEvent = {\n      event,\n      el,\n      action: GridAction.SORT,\n      column,\n      target: this,\n      sort: this.state.sortItem\n    };\n    this.action.emit(actionEvent);\n  }\n\n  onSelect(column: Column, el: HTMLElement, event: MouseEvent) {\n    const field = column.field;\n    if (this.state.selectedColumnsMap.has(field)) {\n      if (this.unselectColumn(field)) {\n        const actionEvent: GridHeaderActionEvent = {\n          event,\n          el,\n          action: GridAction.SELECT_COLUMN,\n          column,\n          selectedColumns: this.getSelectedColumns(),\n          target: this\n        };\n        this.action.emit(actionEvent);\n      }\n    } else {\n      this.selectColumn(field, column);\n      const actionEvent: GridHeaderActionEvent = {\n        event,\n        el,\n        action: GridAction.SELECT_COLUMN,\n        column,\n        selectedColumns: this.getSelectedColumns(),\n        target: this\n      };\n      this.action.emit(actionEvent);\n    }\n  }\n}\n","<table class=\"grid-header\">\n  <tr\n    *ngFor=\"let cells of state?.data\"\n    [class]=\"getGridRowClassName(cells)\"\n    [style.height.px]=\"state?.rowHeight\"\n  >\n    <th\n      *ngFor=\"let cell of cells\"\n      [class]=\"getGridCellClassName(cell)\"\n      [class.selected]=\"state.selectedColumnsMap.has(cell.field)\"\n      [attr.data-field]=\"cell.field\"\n      [attr.data-action]=\"GridAction.SELECT_CELL\"\n      [colSpan]=\"cell.colspan || 1\"\n      [rowSpan]=\"cell.rowspan || 1\"\n    >\n      <div\n        [class]=\"getGridCellContentClassName(cell)\"\n        [style.width.px]=\"cell.width\"\n        [style.height.px]=\"state.rowHeight * (cell.rowspan || 1)\"\n        [style.lineHeight.px]=\"state.rowHeight * (cell.rowspan || 1) - 2\"\n        [title]=\"cell.name\"\n      >\n        <div class=\"content-outer\">\n          <div class=\"content-inner\">\n            <ng-container\n              *ngTemplateOutlet=\"state.tpls[cell.name]; context: { $implicit: cell }\"\n            ></ng-container\n            >{{ state.tpls[cell.name] ? \"\" : cell.name }}\n            <mc-icon\n              *ngIf=\"state.sortItem.fieldName === cell.field\"\n              [config]=\"{ icon: Icon.chevron, themes: [Theme.gridHeaderSort] }\"\n              [class.flip]=\"state.sortItem.direction === SortDirection.ASC\"\n            ></mc-icon>\n          </div>\n        </div>\n      </div>\n    </th>\n  </tr>\n</table>\n","import { GridBodyComponent } from './grid-body.component';\nimport { ScrollComponent } from './../scroll/scroll.component';\nimport { debounceTime } from 'rxjs/operators';\nimport {\n  GridHeaderConfig,\n  GridBodyConfig,\n  GridConfig,\n  GridHeaderActionEvent,\n  ScrollData,\n  ScrollConfig,\n  SortItem,\n  SortDirection,\n  Column,\n  ScrollActionEvent,\n  ScrollPage,\n  GridActionEvent,\n  ScrollAction,\n  GridBodyActionEvent,\n  Align,\n  GridRowMeta,\n  ExtraHeightPage\n} from './../../shared.models';\nimport { BaseComponent } from './../base.component';\nimport { SharedService } from './../../shared.service';\nimport { Component, ElementRef, ViewChild, Input, ComponentRef } from '@angular/core';\nimport { GridAction, ScrollDataAction } from '../../shared.models';\nimport { isEmpty } from '../../utils/utils';\nimport { getAutoColumnWidth } from '../../utils/grid-utils';\nimport { getContainerWidth } from '../../utils/dom-utils';\nimport { Subscription } from 'rxjs';\n\n/**\n * Only one accordion content can be opened.\n * When scrolling and the page is removed, the opened accordion will be closed.\n * The before remove page event will be fired for giving a chance to clean up the accordion contents.\n * The parent component should remove the dynamic component for the accordion content before removing the container page.\n */\n\nconst ACCORDION_ARROW_COLUMN = {\n  field: '__arrow__',\n  name: '',\n  width: 50,\n  fixedWidth: true,\n  align: Align.CENTER,\n  noOverflowMask: true\n};\n\ninterface State {\n  scrollConfig?: ScrollConfig;\n  headerConfig?: GridHeaderConfig;\n  columns?: Array<Column>;\n  bodyHeight?: number;\n  bodyWidth: string;\n}\n\ninterface BodyComponentMeta {\n  subscription: Subscription;\n  gridBodyComponentRef: ComponentRef<GridBodyComponent>;\n}\n\n@Component({\n  selector: 'mc-grid',\n  styleUrls: ['grid.component.scss'],\n  templateUrl: './grid.component.html'\n})\nexport class GridComponent extends BaseComponent {\n  private defaultColumnWidth = 100;\n  private lastContainerWidth: number;\n  private resizedContainerWidth: number;\n  private sortItem: SortItem = {\n    fieldName: '',\n    direction: SortDirection.ASC\n  };\n  private renderedBodyComponentMetaMap = new Map<number, BodyComponentMeta>();\n  private pages: Array<ScrollPage>;\n  private currentPageIndexes: Array<number>;\n  private emptyPageIndexes: Array<number> = [];\n  private pageElements: Array<HTMLElement>;\n  private idRowIndexMap = new Map<string, number>();\n  private pageRowCount: number;\n  private renderedPagesMap = new Set<number>();\n  private selectedRowsMap = new Map<string, any>();\n  private openedAccordionPageIndex: number;\n\n  private _data: ScrollData;\n\n  defaultState: State = {\n    scrollConfig: null,\n    headerConfig: null,\n    bodyHeight: 0,\n    bodyWidth: '100%'\n  };\n\n  state: State;\n\n  defaultConfig: GridConfig = {\n    columns: [],\n    columnTpls: {},\n    startRowIndex: 0,\n    selectableCell: false,\n    selectedCell: null,\n    columnWidthIsRatio: true,\n    selectCellByMouseOver: false,\n    emptyText: 'No Data',\n    idField: 'id',\n    rowHeight: 30,\n    displayLoader: true,\n    data: null,\n    // header\n    headerRowHeight: 0,\n    headerTpls: {},\n    headerData: null,\n    atLeastOneSelectedColumnRequired: false,\n    selectedColumns: [],\n    // scroll\n    loadingText: null,\n    minPageRowCount: 20,\n    // body accordion\n    hasAccordionRow: false,\n    accordionContentTpl: null,\n    accordionContentHeight: 300,\n    selectedRows: [],\n    multiSelectRow: false,\n    adjustHeight: true\n  };\n\n  _config: GridConfig;\n\n  @Input()\n  set data(data: ScrollData) {\n    if (!data) {\n      return;\n    }\n    const newData = data;\n    const action = newData.action\n      ? newData.action\n      : newData.startRowIndex\n      ? ScrollDataAction.APPEND\n      : ScrollDataAction.INIT;\n    const oldData = this._data || {};\n    let rowCount: number;\n    let rows: any[];\n    // Update Data\n    switch (action) {\n      case ScrollDataAction.INIT:\n        this.renderedPagesMap = new Set<number>();\n        rows = newData.rows;\n        rows.forEach((row, rowIndex) => this.idRowIndexMap.set(this.getStringRowID(row), rowIndex));\n        rowCount = newData.rowCount ? newData.rowCount : rows ? rows.length : null;\n        this.selectedRows = [];\n        if (this.rendered) {\n          this.removeGridBodyAll();\n          this.updateBodySize(rowCount);\n        }\n        // rerender scroll component\n        this.scrollCmp.rowCount = rowCount;\n        break;\n      case ScrollDataAction.RELOAD:\n      case ScrollDataAction.APPEND:\n        rowCount = newData.rowCount ? newData.rowCount : oldData.rowCount;\n        rows = oldData.rows.concat();\n        const startRowIndex = newData.startRowIndex;\n        newData.rows.forEach((d, i) => {\n          rows[startRowIndex + i] = d;\n          this.idRowIndexMap.set(this.getStringRowID(d), startRowIndex + i);\n        });\n        break;\n    }\n    this.scrollCmp.isLoading = false;\n    this._data = {\n      rows,\n      rowCount\n    };\n    // Render Pages. This can be different from the added data since the added data can be async.\n    switch (action) {\n      case ScrollDataAction.INIT:\n        break;\n      // neededData is async so it needs to be reloaded all pages.\n      case ScrollDataAction.APPEND:\n        this.renderPages(this.emptyPageIndexes);\n        break;\n      case ScrollDataAction.RELOAD:\n        this.rerenderPages();\n        break;\n    }\n  }\n  get data() {\n    return this._data;\n  }\n\n  @Input()\n  set selectedRows(selectedRows: Array<any>) {\n    if (selectedRows) {\n      this.selectedRowsMap = selectedRows.reduce(\n        (map, row) => map.set(this.getStringRowID(row), row),\n        new Map<string, any>()\n      );\n      this.applySelectedRows();\n    }\n  }\n\n  @ViewChild(ScrollComponent) scrollCmp: ScrollComponent;\n\n  constructor(protected er: ElementRef, protected service: SharedService) {\n    super(er);\n    this.subscriptions = service.windowResize.pipe(debounceTime(500)).subscribe(() => this.onResizeWindow());\n  }\n\n  applyConfig(config: GridConfig) {\n    this.initColumns(config);\n  }\n\n  applyState(config: GridConfig) {\n    this.selectedRows = this._config.selectedRows;\n    this.setHeaderConfig(this._config);\n    this.setScrollConfig(this._config);\n    this.sortItem = this.getSortItem(config.columns);\n    // this.data = config.data;\n    this.initSize(this._config);\n  }\n\n  afterRenderCmp() {\n    // after scroll component is rendered we can bind a data\n    setTimeout(() => this.data = this._config.data);\n  }\n\n  initColumns(config: GridConfig) {\n    const columns = config.columns;\n    const len = columns.length;\n    config.selectedColumns = columns.reduce((selectedColumns, column) => {\n      if (column.selected) {\n        selectedColumns.push(column);\n      }\n      return selectedColumns;\n    }, []);\n    if (config.hasAccordionRow && columns.length && columns[len - 1].field !== '__arrow__') {\n      columns.push(ACCORDION_ARROW_COLUMN);\n      config.columns = columns;\n    }\n  }\n\n  applySelectedRows(removed = false) {\n    // after rendering the grid body, the accordion can be opened.\n    // the grid body can report it has a opened accordion.\n    // then the scroll component can notice the body height change and it will update the page container height.\n    // only the rendered page containers can have the extra height that from the body component.\n    this.renderedBodyComponentMetaMap.forEach((bodyComponentMeta, pageIndex) => {\n      const ref = bodyComponentMeta.gridBodyComponentRef;\n      ref.instance.selectedRows = this.getSelectedRows();\n      // after rendering grid body\n      if (!removed) {\n        setTimeout(() => this.addExtraHeight(pageIndex, ref));\n      }\n    });\n  }\n\n  addExtraHeight(pageIndex: number, bodyCmpRef: ComponentRef<GridBodyComponent>) {\n    if (this._config && this._config.hasAccordionRow) {\n      // need to know the selected row's page index\n      const selectedRows = bodyCmpRef.instance.getSelectedRowsOfGridBody();\n      if (selectedRows.length) {\n        const accordionHeight = this.getAccordionContentHeight(selectedRows[0]);\n        const extraHeightPages: Array<ExtraHeightPage> = [];\n        if (!isEmpty(this.openedAccordionPageIndex)) {\n          extraHeightPages.push({\n            pageIndex: this.openedAccordionPageIndex,\n            extraHeight: 0\n          });\n        }\n        extraHeightPages.push({\n          pageIndex,\n          extraHeight: accordionHeight\n        });\n        this.scrollCmp.updateExtraHeight(extraHeightPages);\n        this.openedAccordionPageIndex = pageIndex;\n      }\n    }\n  }\n\n  applySelectedCell() {\n    this.renderedBodyComponentMetaMap.forEach(\n      bodyComponentMeta => (bodyComponentMeta.gridBodyComponentRef.instance.selectedCell = this._config.selectedCell)\n    );\n  }\n\n  setScrollConfig(config: GridConfig) {\n    const scrollConfig: ScrollConfig = {\n      themes: config.themes,\n      loadingText: config.loadingText,\n      emptyText: config.emptyText,\n      rowHeight: config.rowHeight,\n      displayLoader: config.displayLoader,\n      minPageRowCount: config.minPageRowCount\n    };\n    this.setState({ scrollConfig });\n  }\n\n  setHeaderConfig(config: GridConfig) {\n    const headerConfig: GridHeaderConfig = {\n      themes: config.themes,\n      rowHeight: config.headerRowHeight || config.rowHeight,\n      tpls: config.headerTpls,\n      data: config.headerData,\n      atLeastOneSelectedColumnRequired: config.atLeastOneSelectedColumnRequired,\n      selectedColumns: config.selectedColumns\n    };\n    this.setState({ headerConfig });\n  }\n\n  getStringRowID(row: any) {\n    return '' + row[this._config.idField];\n  }\n\n  getSortItem(columns: Array<Column>) {\n    if (columns) {\n      const sortCol = columns.find(col => !!col.sortDirection);\n      if (sortCol) {\n        return {\n          fieldName: sortCol.field,\n          direction: sortCol.sortDirection\n        };\n      }\n    }\n    return null;\n  }\n\n  updateColumnWidth(config: GridConfig) {\n    if (this.lastContainerWidth !== this.resizedContainerWidth) {\n      config.columns = getAutoColumnWidth(\n        config.columns,\n        this.resizedContainerWidth,\n        config.columnWidthIsRatio,\n        this.defaultColumnWidth\n      );\n      this.lastContainerWidth = this.resizedContainerWidth;\n      this.setState({ columns: config.columns });\n    } else {\n      if (!this.state.columns) {\n        this.setState({ columns: config.columns });\n      }\n    }\n  }\n\n  initSize(config: GridConfig, resize = false) {\n    this.resizedContainerWidth = getContainerWidth(this.el.parentElement);\n    if (!this.state.columns || resize) {\n      this.updateColumnWidth(config);\n    }\n    const rowCount = this.data ? this.data.rowCount : this._config.rowCount;\n    this.updateBodySize(rowCount);\n    if (resize) {\n      // after rendering header and body\n      this.rerenderPages();\n    } else {\n      if (rowCount) {\n        this.scrollCmp.rowCount = rowCount;\n      }\n    }\n  }\n\n  updateBodySize(rowCount: number) {\n    const config = this._config;\n    const rowHeight = config.rowHeight;\n    this.el.style.height = '100%';\n    const headerEl = this.el.querySelector('mc-grid-header');\n    const headerHeight = headerEl.clientHeight;\n    let bodyHeight = this.el.clientHeight - headerHeight;\n    if (config.adjustHeight && !isEmpty(rowCount)) {\n      const dataHeight = !rowCount ? rowHeight : rowHeight * rowCount;\n      if (bodyHeight > dataHeight) {\n        bodyHeight = dataHeight;\n        this.el.style.height = 'auto';\n      }\n    }\n    this.setState({ bodyHeight });\n  }\n\n  resize() {\n    this.initSize(this._config, true);\n  }\n\n  getBodyConfig(config: GridConfig, data: Array<any>, pageIndex: number): GridBodyConfig {\n    return {\n      themes: config.themes,\n      rowHeight: config.rowHeight,\n      tpls: config.columnTpls,\n      idField: config.idField,\n      selectCellByMouseOver: config.selectCellByMouseOver,\n      columns: config.columns,\n      startRowIndex: pageIndex * this.pageRowCount,\n      selectableCell: config.selectableCell,\n      selectedCell: config.selectedCell,\n      hasAccordionRow: config.hasAccordionRow,\n      accordionContentTpl: config.accordionContentTpl,\n      accordionContentHeight: config.accordionContentHeight,\n      selectedRows: this.getSelectedRows(),\n      multiSelectRow: config.multiSelectRow,\n      data,\n      pageIndex\n    };\n  }\n\n  renderGridBody(pageIndex: number, el: HTMLElement, data: Array<any>) {\n    this.renderedPagesMap.add(pageIndex);\n    const gridBodyComponentRef: ComponentRef<GridBodyComponent> = this.service.addComponent(GridBodyComponent, el);\n    const instance = gridBodyComponentRef.instance;\n    instance.config = this.getBodyConfig(this._config, data, pageIndex);\n    const subscription = instance.action.subscribe((e: GridBodyActionEvent) => {\n      this.onGridBodyAction(e);\n    });\n    this.renderedBodyComponentMetaMap.set(pageIndex, {\n      subscription,\n      gridBodyComponentRef\n    });\n    // after rendering grid\n    setTimeout(() => this.addExtraHeight(pageIndex, gridBodyComponentRef));\n    return gridBodyComponentRef;\n  }\n\n  removeGridBody(pageIndex: number) {\n    // remove the extra height of the page container\n    this.renderedPagesMap.delete(pageIndex);\n    const meta = this.renderedBodyComponentMetaMap.get(pageIndex);\n    if (meta) {\n      this.emitAction({ action: GridAction.REMOVE_PAGE, pageIndex });\n      meta.subscription.unsubscribe();\n      this.service.removeComponent(meta.gridBodyComponentRef);\n      this.renderedBodyComponentMetaMap.delete(pageIndex);\n    }\n  }\n\n  removeGridBodyAll() {\n    this.renderedBodyComponentMetaMap.forEach((bodyComponentMeta, pageIndex) => this.removeGridBody(pageIndex));\n  }\n\n  emitAction(config: GridActionEvent) {\n    this.action.emit(Object.assign(this.getBasicGridActionEvent(), config));\n  }\n\n  getSelectedRows() {\n    return [...this.selectedRowsMap.values()];\n  }\n\n  getBasicGridActionEvent(): GridActionEvent {\n    return {\n      target: this,\n      selectedColumns: this._config.selectedColumns.concat(),\n      sort: Object.assign({}, this.sortItem),\n      selectedRows: this.getSelectedRows(),\n      pageRowCount: this.pageRowCount * 2 // basically 2 pages need to be loaded at once\n    };\n  }\n\n  getAccordionContentHeight(row: any) {\n    const meta: GridRowMeta = row && row.__meta__ ? row.__meta__ : {};\n    return meta.accordionContentHeight || this._config.accordionContentHeight;\n  }\n\n  scrollById(id: any): number {\n    id = '' + id;\n    const rowIndex = this.idRowIndexMap.get(id);\n    if (!isEmpty(rowIndex)) {\n      this.scrollCmp.scrollByRowIndex(rowIndex);\n    } else {\n      console.warn('There is no row data, Please get the row data first.');\n    }\n    return rowIndex;\n  }\n\n  scrollByIdAndSelectRow(id: any) {\n    const rowIndex = this.scrollById(id);\n    const rowEl: HTMLElement = this.el.querySelector(`[data-id=\"${id}\"]`);\n    if (rowEl) {\n      rowEl.click();\n      const accordionAnimationDuration = 400;\n      // adjust scroll\n      setTimeout(() => this.scrollCmp.scrollByRowIndex(rowIndex), accordionAnimationDuration);\n      return true;\n    }\n    return false;\n  }\n\n  selectRow(rowData: any) {\n    const config = this._config;\n    if (!config.multiSelectRow || config.hasAccordionRow) {\n      this.selectedRowsMap.clear();\n    }\n    this.selectedRowsMap.set(this.getStringRowID(rowData), rowData);\n    this.applySelectedRows();\n  }\n\n  unselectRow(id: string, pageIndex: number) {\n    this.selectedRowsMap.delete(id);\n    if (this._config.hasAccordionRow) {\n      this.scrollCmp.updateExtraHeight([{ pageIndex, extraHeight: 0 }]);\n      this.openedAccordionPageIndex = null;\n    }\n    this.applySelectedRows(true);\n  }\n\n  renderPages(pageIndexes: Array<number>) {\n    const pages = this.pages;\n    const pageElements = this.pageElements;\n    const emptyPageIndexes: Array<number> = [];\n    let neededStartRowIndex = Infinity;\n    let neededEndRowIndex = -Infinity;\n    const rows = this.data.rows;\n    pageIndexes.forEach(pageIndex => {\n      const page = pages[pageIndex];\n      if (rows[page.startRowIndex] && rows[page.endRowIndex]) {\n        if (!this.renderedPagesMap.has(pageIndex)) {\n          this.renderGridBody(pageIndex, pageElements[pageIndex], rows.slice(page.startRowIndex, page.endRowIndex + 1));\n        }\n      } else {\n        emptyPageIndexes.push(pageIndex);\n        neededStartRowIndex = Math.min(neededStartRowIndex, page.startRowIndex);\n        neededEndRowIndex = Math.max(neededEndRowIndex, page.endRowIndex);\n      }\n    });\n    this.emptyPageIndexes = emptyPageIndexes;\n    if (neededStartRowIndex !== Infinity) {\n      this.scrollCmp.isLoading = true;\n      this.emitAction({ action: GridAction.GET_DATA, neededStartRowIndex, neededEndRowIndex });\n    }\n  }\n\n  rerenderPages() {\n    this.removeGridBodyAll();\n    this.renderPages(this.currentPageIndexes);\n  }\n\n  getRemovingPageIndexes(oldIndexes: Array<number>, newIndexes: Array<number>) {\n    return oldIndexes.filter(i => !newIndexes.includes(i));\n  }\n\n  onResizeWindow() {\n    this.resize();\n  }\n\n  onHeaderAction(e: GridHeaderActionEvent) {\n    const action: GridAction = e.action;\n    switch (action) {\n      case GridAction.SELECT_COLUMN:\n        this._config.selectedColumns = e.selectedColumns;\n        this.scrollCmp.isLoading = true;\n        this.emitAction({ action });\n        break;\n      case GridAction.SORT:\n        this.sortItem = e.sort;\n        this.scrollCmp.isLoading = true;\n        this.emitAction({ action });\n        break;\n    }\n  }\n\n  onScrollAction(e: ScrollActionEvent) {\n    const action = e.action;\n    switch (action) {\n      case ScrollAction.UPDATE_PAGES:\n        this.pages = e.pages;\n        this.pageElements = e.pageElements;\n        this.pageRowCount = e.pageRowCount;\n        const oldPageIndexes = this.currentPageIndexes;\n        this.currentPageIndexes = e.currentPageIndexes;\n        if (action === ScrollAction.UPDATE_PAGES) {\n          const removePageIndexes = this.getRemovingPageIndexes(oldPageIndexes || [], this.currentPageIndexes);\n          removePageIndexes.forEach(pageIndex => this.removeGridBody(pageIndex));\n          this.renderPages(this.currentPageIndexes);\n        } else {\n          this.rerenderPages();\n        }\n        break;\n      case ScrollAction.GET_ROW_COUNT:\n        this.scrollCmp.isLoading = true;\n        this.pageRowCount = e.pageRowCount;\n        this.emitAction({ action: GridAction.GET_DATA, neededStartRowIndex: 0 });\n        break;\n    }\n  }\n\n  onGridBodyAction(e: GridBodyActionEvent) {\n    const config = this._config;\n    switch (e.action) {\n      case GridAction.SELECT_ROW:\n        this.selectRow(e.rowData);\n        this.emitAction(e);\n        break;\n      case GridAction.UNSELECT_ROW:\n        this.unselectRow(e.id, e.pageIndex);\n        this.emitAction(e);\n        break;\n      case GridAction.SELECT_CELL:\n      case GridAction.MOUSEOVER_CELL:\n        config.selectedCell = e.selectedCell;\n        this.applySelectedCell();\n        this.emitAction(e);\n        break;\n    }\n  }\n\n  destroyCmp() {\n    this.pageElements = null;\n    this.removeGridBodyAll();\n    this.renderedBodyComponentMetaMap = null;\n  }\n}\n","<mc-grid-header\n  [config]=\"state?.headerConfig\"\n  [columns]=\"state?.columns\"\n  (action)=\"onHeaderAction($event)\"\n>\n</mc-grid-header>\n<mc-scroll\n  [config]=\"state?.scrollConfig\"\n  [style.height.px]=\"state?.bodyHeight\"\n  [style.width]=\"state?.bodyWidth\"\n  (action)=\"onScrollAction($event)\"\n>\n</mc-scroll>\n","import { Component, ElementRef } from '@angular/core';\nimport { BaseComponent } from '../base.component';\nimport { IconConfig } from '../../shared.models';\n\n@Component({\n  selector: 'mc-icon',\n  styleUrls: ['icon.component.scss'],\n  templateUrl: './icon.component.html'\n})\nexport class IconComponent extends BaseComponent {\n  defaultConfig: IconConfig = {\n    icon: ''\n  };\n\n  _config: IconConfig;\n\n  constructor(protected er: ElementRef) {\n    super(er);\n  }\n\n  beforeThemeInit() {\n    if (this._config.icon) {\n      this.el.classList.add('icon', 'icon-' + this._config.icon);\n    }\n  }\n}\n","export * from './icon/icon.component';\nexport * from './list/list.component';\nexport * from './list/list-item.component';\nexport * from './mask/mask.component';\nexport * from './drawer/drawer.component';\nexport * from './scrollbar/scrollbar.component';\nexport * from './popup/popup.component';\nexport * from './grid/grid.component';\nexport * from './grid/grid-body.component';\nexport * from './grid/grid-header.component';\nexport * from './scroll/scroll.component';\nexport * from './loader/loader.component';\nexport * from './visualizer/visualizer.component';\nexport * from './form/fields/text/text.component';\nexport * from './visualizer/bar/bar.component';\nexport * from './visualizer/line/line.component';\nexport * from './visualizer/axis/axis.component';\n","import { ListAction, ListItem, ListItemConfig, ListItemActionEvent } from '../../shared.models';\nimport { Component, Input, HostBinding, HostListener, TemplateRef } from '@angular/core';\nimport { BaseComponent } from '../base.component';\nimport { isEmpty } from '../../utils/utils';\n\ninterface State {\n  tpl: TemplateRef<any>;\n  data: ListItem;\n  nameField: string;\n}\n\n@Component({\n  selector: 'mc-list-item',\n  styleUrls: ['list-item.component.scss'],\n  templateUrl: 'list-item.component.html'\n})\nexport class ListItemComponent extends BaseComponent {\n  defaultConfig: ListItemConfig = {\n    tpl: null,\n    data: {},\n    idField: 'id',\n    nameField: 'name',\n    toggleSelect: false,\n    height: 0,\n    horizontal: false\n  };\n\n  _config: ListItemConfig;\n\n  defaultState: State = {\n    tpl: null,\n    data: {},\n    nameField: 'name'\n  };\n\n  state: State;\n\n  @HostBinding('style.height') private height = '';\n  @HostBinding('style.lineHeight') private lineHeight = '';\n  @HostBinding('class.selected') @Input() selected = false;\n  @HostBinding('class.horizontal') private horizontal = false;\n\n  @HostListener('click', ['$event'])\n  onPress(e: MouseEvent) {\n    // selected state is made by config.\n    const selected = this._config.toggleSelect ? !this.selected : true;\n    const actionEvent: ListItemActionEvent = {\n      target: this,\n      action: selected ? ListAction.SELECT_ITEM : ListAction.UNSELECT_ITEM,\n      event: e,\n      selected,\n      data: this.state.data\n    };\n    this.action.emit(actionEvent);\n  }\n\n  applyState(config: ListItemConfig) {\n    if (config.height) {\n      this.height = config.height + 'px';\n      this.lineHeight = config.height + 'px';\n    }\n    this.horizontal = config.horizontal;\n    if (!isEmpty(config.selected)) {\n      this.selected = config.selected;\n    }\n  }\n}\n","<div class=\"list-item--body\">\n  <ng-container\n    *ngTemplateOutlet=\"state?.tpl; context: { $implicit: state?.data }\"\n  ></ng-container\n  >{{ state?.tpl ? '' : state?.data[state.nameField] }}\n</div>\n","import { ListAction, ListItem, ListConfig, ListItemActionEvent, ListActionEvent } from '../../shared.models';\nimport { BaseComponent } from '../base.component';\nimport { Component, HostBinding, Input, TemplateRef } from '@angular/core';\n\ninterface State {\n  data: Array<ListItem>;\n  selectedItemsMap: Map<string, any>;\n}\n\n@Component({\n  selector: 'mc-list',\n  styleUrls: ['list.component.scss'],\n  templateUrl: './list.component.html'\n})\nexport class ListComponent extends BaseComponent {\n  private _selectedItems: Array<ListItem> = [];\n  private _data: Array<ListItem> = [];\n\n  defaultState: State = {\n    data: [],\n    selectedItemsMap: new Map<string, any>()\n  };\n\n  state: State;\n\n  defaultConfig: ListConfig = {\n    rowHeight: 0,\n    multiSelect: false,\n    toggleSelect: false,\n    itemTpl: null,\n    idField: 'id',\n    nameField: 'name',\n    horizontal: false\n  };\n\n  _config: ListConfig;\n\n  @Input()\n  set selectedItems(selectedItems: Array<ListItem>) {\n    if (selectedItems) {\n      const idField = this._config.idField;\n      const selectedItemsMap = new Map();\n      this.hasSelectedItem = selectedItems.length > 0;\n      selectedItems.forEach(d => selectedItemsMap.set('' + d[idField], d));\n      this.setState({ selectedItemsMap });\n      this._selectedItems = selectedItems;\n    }\n  }\n  get selectedItems() {\n    return this._selectedItems;\n  }\n\n  @Input()\n  set data(data: Array<ListItem>) {\n    if (data) {\n      this.setState({ data });\n      this._data = data;\n    }\n  }\n  get data() {\n    return this._data;\n  }\n\n  @HostBinding('class.horizontal') private horizontal = false;\n  @HostBinding('class.has-selected-item') private hasSelectedItem = false;\n\n  afterRenderCmp() {\n    // if it has the selected item.\n    if (this.selectedItems.length) {\n      this.emitAction(ListAction.SELECT_ITEM, this.selectedItems[0]);\n    }\n  }\n\n  applyState(config: ListConfig) {\n    this.horizontal = config.horizontal;\n    this.selectedItems = config.selectedItems;\n  }\n\n  getStringId(data: ListItem) {\n    return '' + data[this._config.idField];\n  }\n\n  getItemThemes(data: ListItem) {\n    const themes = [...this._config.themes];\n    if (data.theme) {\n      themes.push(data.theme);\n    }\n    return themes;\n  }\n\n  getSelectedItems() {\n    const items: Array<ListItem> = [];\n    this.state.selectedItemsMap.forEach(value => items.push(value));\n    return items;\n  }\n\n  selectItem(item) {\n    const config = this._config;\n    let selectedItems = this.selectedItems.concat();\n    if (!config.multiSelect) {\n      selectedItems = [];\n    }\n    selectedItems.push(item);\n    this.selectedItems = selectedItems;\n  }\n\n  unselectItem(item) {\n    const config = this._config;\n    if (config.multiSelect || config.toggleSelect) {\n      const idField = config.idField;\n      this.selectedItems = this.selectedItems.filter(d => d[idField] !== item[idField]);\n    }\n  }\n\n  emitAction(actionType: ListAction, selectedItem: ListItem, event = null) {\n    const action: ListActionEvent = {\n      target: this,\n      action: actionType,\n      event,\n      selectedItem,\n      selectedItems: this.getSelectedItems()\n    };\n    this.action.emit(action);\n  }\n\n  onListItemAction(e: ListItemActionEvent) {\n    switch (e.action) {\n      case ListAction.UNSELECT_ITEM:\n      case ListAction.SELECT_ITEM:\n        if (e.action === ListAction.SELECT_ITEM) {\n          this.selectItem(e.data);\n        } else {\n          this.unselectItem(e.data);\n        }\n        this.emitAction(e.action, e.data, e.event);\n        break;\n    }\n  }\n}\n","<mc-list-item\n  *ngFor=\"let item of state?.data\"\n  [config]=\"{\n      data: item,\n      themes: getItemThemes(item),\n      height: _config.rowHeight,\n      idField: _config.idField,\n      nameField: _config.nameField,\n      horizontal: _config.horizontal,\n      toggleSelect: _config.toggleSelect,\n      tpl: _config.itemTpl\n    }\"\n  [selected]=\"state?.selectedItemsMap.has(this.getStringId(item))\"\n  (action)=\"onListItemAction($event)\"\n>\n</mc-list-item>\n","import { ComponentTheme } from './../../shared.models';\nimport { Component, ElementRef } from '@angular/core';\nimport { BaseComponent } from '../base.component';\nimport { ComponentConfig } from '../../shared.models';\n\ninterface State {\n  theme?: string;\n}\n\n@Component({\n  selector: 'mc-loader',\n  styleUrls: ['loader.component.scss'],\n  templateUrl: 'loader.component.html'\n})\nexport class LoaderComponent extends BaseComponent {\n  defaultConfig: ComponentConfig = {\n    themes: [ComponentTheme.horizontal]\n  };\n\n  _config: ComponentConfig;\n\n  state: State;\n\n  constructor(protected er: ElementRef) {\n    super(er);\n  }\n\n  applyState(config: ComponentConfig) {\n    this.setState({ theme: config.themes[0] });\n  }\n}\n","<ng-container [ngSwitch]=\"state?.theme\">\n  <div *ngSwitchCase=\"'horizontal'\" class=\"loader\">\n    <div></div>\n  </div>\n</ng-container>\n","import { Component, ElementRef, HostBinding, Input } from '@angular/core';\nimport { BaseComponent } from '../base.component';\nimport { MaskConfig } from '../../shared.models';\nimport { isEmpty } from '../../utils/utils';\n\n@Component({\n  selector: 'mc-mask',\n  styleUrls: ['mask.component.scss'],\n  templateUrl: 'mask.component.html'\n})\nexport class MaskComponent extends BaseComponent {\n  defaultConfig: MaskConfig = {\n    visible: false,\n    transparent: false\n  };\n\n  _config: MaskConfig;\n\n  @HostBinding('class.visible') @Input() visible = false;\n  @HostBinding('class.transparent') private transparent = false;\n\n  constructor(protected er: ElementRef) {\n    super(er);\n  }\n\n  applyState(config: MaskConfig) {\n    if (!isEmpty(config.visible)) {\n      this.visible = config.visible;\n    }\n    this.transparent = config.transparent;\n  }\n}\n","import { Icon, ComponentTheme, PopupStartFrom } from './../../shared.models';\nimport { ComponentActionEvent, ComponentAction } from '../../shared.models';\nimport { SharedService } from './../../shared.service';\nimport { BaseComponent } from './../base.component';\nimport { Component, ElementRef, HostBinding, TemplateRef } from '@angular/core';\nimport { PopupConfig } from '../../shared.models';\n\ninterface State {\n  tpl: TemplateRef<any>;\n}\n\ninterface PopupCoords {\n  top: number;\n  left: number;\n  indicatorIsLeft: boolean;\n  indicatorIsTop: boolean;\n}\n\n@Component({\n  selector: 'mc-popup',\n  styleUrls: ['popup.component.scss'],\n  templateUrl: 'popup.component.html'\n})\nexport class PopupComponent extends BaseComponent {\n  // for body press event, it is triggered after clicking the target. We need to ignore the body event when visible = true;\n  private bodyEventLock = false;\n  private checkTargetElLocationIntervalId: number;\n  private indicatorHeight = 10;\n\n  private lastTargetElCoord: ClientRect;\n\n  Icon = Icon;\n  Theme = ComponentTheme;\n\n  defaultConfig: PopupConfig = {\n    checkTargetLocation: true,\n    startFrom: PopupStartFrom.BOTTOM,\n    offsetX: 0,\n    offsetY: 0,\n    tpl: null,\n    targetEl: null,\n    hasIndicator: true,\n    center: false,\n    hasBorder: true,\n    hasCloseButton: true\n  };\n\n  _config: PopupConfig;\n\n  defaultState: State = {\n    tpl: null\n  };\n\n  state: State;\n\n  @HostBinding('class.center') private center = false;\n  @HostBinding('class.has-border') private hasBorder = true;\n  @HostBinding('class.has-close-button') private hasCloseButton = true;\n  @HostBinding('class.popup-indicator') private hasIndicator = true;\n\n  constructor(protected er: ElementRef, private service: SharedService) {\n    super(er);\n    this.subscriptions = service.bodyPress.subscribe(this.onPressBody.bind(this));\n  }\n\n  applyState(config: PopupConfig) {\n    this.center = config.center;\n    this.hasBorder = config.hasBorder;\n    this.hasCloseButton = config.hasCloseButton;\n    this.hasIndicator = config.hasIndicator;\n    if (config.targetEl) {\n      this.lastTargetElCoord = config.targetEl.getBoundingClientRect();\n    }\n  }\n\n  show(resizeOnly = false) {\n    const config = this._config;\n    this.holdBodyEvent();\n    if (config.center) {\n      this.el.style.display = '';\n      return;\n    }\n\n    // renew check.\n    if (!resizeOnly) {\n      this.uncheckTargetLocation();\n      this.checkTargetElLocation();\n    }\n\n    // for updating the last size;\n    this.lastTargetElCoord = config.targetEl.getBoundingClientRect();\n    if (!resizeOnly) {\n      this.el.style.visibility = 'hidden';\n      this.el.style.display = '';\n    }\n    // after the targetEl is changed.\n    setTimeout(() => {\n      // it can be removed\n      if (!this.el) {\n        return;\n      }\n\n      const coords = this.getCoords(config);\n      this.el.style.left = coords.left + 'px';\n      this.el.style.top = coords.top + 'px';\n      // remove the prev indicator and add the new indicator\n      let classNames = this.el.className.split(' ');\n      classNames = classNames.filter(d => !d.includes('popup-indicator-'));\n      classNames.push(\n        'popup-indicator-' +\n          (coords.indicatorIsTop ? 'top' : 'bottom') +\n          '-' +\n          (coords.indicatorIsLeft ? 'left' : 'right')\n      );\n      this.el.className = classNames.join(' ');\n      if (!resizeOnly) {\n        this.el.style.visibility = '';\n      }\n    });\n  }\n\n  getCoords(config: PopupConfig): PopupCoords {\n    const targetSize = this.lastTargetElCoord;\n    // when the popup overflow the window size, we need to move into the window.\n    const indicatorHeight = config.hasIndicator ? this.indicatorHeight : 0;\n    const popupSize = this.el.getBoundingClientRect();\n    const windowSize = this.getWindowSize();\n\n    const indicatorIsLeft =\n      targetSize.left + targetSize.width / 2 + popupSize.width + config.offsetX <= windowSize.width;\n\n    const left = indicatorIsLeft\n      ? targetSize.left + targetSize.width / 2 + config.offsetX\n      : targetSize.left - popupSize.width + targetSize.width / 2 - config.offsetX;\n\n    let indicatorIsTop = true;\n    let top = 0;\n\n    switch (config.startFrom) {\n      case PopupStartFrom.BOTTOM:\n        indicatorIsTop =\n          targetSize.top + targetSize.height + popupSize.height + config.offsetY + indicatorHeight <= windowSize.height;\n        break;\n      case PopupStartFrom.TOP:\n        indicatorIsTop = targetSize.top - popupSize.height + config.offsetY - indicatorHeight <= 0;\n        break;\n    }\n\n    top = indicatorIsTop\n      ? targetSize.top + targetSize.height + config.offsetY + indicatorHeight\n      : targetSize.top - popupSize.height - config.offsetY - indicatorHeight;\n\n    return {\n      top,\n      left,\n      indicatorIsTop,\n      indicatorIsLeft\n    };\n  }\n\n  resize() {\n    this.show(true);\n  }\n\n  hide() {\n    this.uncheckTargetLocation();\n    this.el.style.display = 'none';\n    const action: ComponentActionEvent = {\n      action: ComponentAction.HID,\n      target: this\n    };\n    this.action.emit(action);\n  }\n\n  // the body click event is triggered after clicking the target and it closes the popup, so need to prevent it.\n  holdBodyEvent() {\n    this.bodyEventLock = true;\n    setTimeout(() => (this.bodyEventLock = false));\n  }\n\n  checkTargetElLocation() {\n    const config = this._config;\n    if (config.targetEl && config.checkTargetLocation) {\n      this.checkTargetElLocationIntervalId = window.setInterval(() => {\n        const info = config.targetEl.getBoundingClientRect();\n        const lastInfo = this.lastTargetElCoord;\n        if (lastInfo) {\n          if (info.top !== lastInfo.top || info.left !== lastInfo.left) {\n            this.hide();\n          }\n        } else {\n          this.lastTargetElCoord = info;\n        }\n      }, 500);\n    }\n  }\n\n  uncheckTargetLocation() {\n    if (this.checkTargetElLocationIntervalId) {\n      clearInterval(this.checkTargetElLocationIntervalId);\n      delete this.checkTargetElLocationIntervalId;\n    }\n  }\n\n  getWindowSize() {\n    const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    const height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    return { width, height };\n  }\n\n  onPressBody(e) {\n    if (!this.bodyEventLock && !this.el.contains(e.target)) {\n      const pos = this.el.compareDocumentPosition(e.target);\n      // console.log('compareDocumentPosition:' + pos);\n      // some overlay items can't be in the container. it returns 35 or 37.\n      if (pos < 33) {\n        this.hide();\n      }\n    }\n  }\n\n  onClickCloseButton() {\n    this.hide();\n  }\n\n  destroyCmp() {\n    this.uncheckTargetLocation();\n  }\n}\n","<div class=\"close-button\">\n  <mc-icon\n    [config]=\"{ icon: Icon.close, themes: [Theme.popup] }\"\n    (click)=\"onClickCloseButton()\"\n  ></mc-icon>\n</div>\n<ng-container *ngTemplateOutlet=\"state?.tpl\"></ng-container>\n","import { ScrollbarAction, ScrollbarActionEvent, ExtraHeightPage, ComponentTheme } from './../../shared.models';\nimport { ScrollbarComponent } from './../scrollbar/scrollbar.component';\nimport { BaseComponent } from '../base.component';\nimport { Component, ElementRef, ViewChild, TemplateRef, Output, EventEmitter, Input } from '@angular/core';\nimport { ScrollConfig, ScrollAction, ScrollPage, ScrollActionEvent } from '../../shared.models';\nimport { isEmpty } from './../../utils/utils';\n\n// it has only one extra height page container and it will be controlled by the parent component.\n\ninterface State {\n  pages: Array<ScrollPage>;\n  tpl?: TemplateRef<any>;\n  rowHeight?: number;\n  loadingText?: string;\n  emptyText?: string;\n  displayLoader?: boolean;\n  rowCount?: number;\n  isLoading?: boolean;\n}\n\n@Component({\n  selector: 'mc-scroll',\n  styleUrls: ['scroll.component.scss'],\n  templateUrl: './scroll.component.html'\n})\nexport class ScrollComponent extends BaseComponent {\n  private pageElements: Array<HTMLElement>;\n  private pageRowCount: number;\n  private currentPageIndexes: Array<number> = [];\n  private scrollTop = 0;\n  private oldScrollTop = 0;\n  private ticking = false;\n  private containerHeight: number;\n\n  private _rowCount: number;\n\n  Theme = ComponentTheme;\n\n  defaultConfig: ScrollConfig = {\n    loadingText: 'loading...',\n    emptyText: 'No Data',\n    rowHeight: 35,\n    displayLoader: true,\n    minPageRowCount: 5\n  };\n\n  _config: ScrollConfig;\n\n  defaultState: State = {\n    tpl: null,\n    pages: [],\n    rowHeight: 0,\n    loadingText: '',\n    emptyText: '',\n    displayLoader: false,\n    rowCount: null,\n    isLoading: true\n  };\n\n  state: State;\n\n  @ViewChild(ScrollbarComponent) scrollBarCmp: ScrollbarComponent;\n\n  @Input()\n  set rowCount(rowCount: number) {\n    if (!isEmpty(rowCount)) {\n      // change row count and resize height\n      this._rowCount = rowCount;\n      const pages = this.initPages();\n      this.setState({ pages, rowCount });\n      if (this.rendered) {\n        // need to wait to render the page elements by state.pages\n        setTimeout(() => this.updatePages());\n      }\n    }\n  }\n  get rowCount() {\n    return this._rowCount;\n  }\n\n  @Input()\n  set isLoading(isLoading: boolean) {\n    if (!isEmpty(isLoading)) {\n      this.setState({ isLoading });\n    }\n  }\n\n  @Output() action = new EventEmitter<ScrollActionEvent>();\n\n  constructor(protected er: ElementRef) {\n    super(er);\n  }\n\n  afterRenderCmp() {\n    this.pageRowCount = this.getPageRowCount(this._config);\n    if (isEmpty(this.rowCount)) {\n      this.requestRowCount();\n    } else {\n      this.updatePages();\n    }\n  }\n\n  applyState(config: ScrollConfig) {\n    this.rowCount = config.rowCount;\n  }\n\n  initPages() {\n    this.scrollTop = 0;\n    this.oldScrollTop = 0;\n    this.pageElements = null;\n    this.currentPageIndexes = [];\n    return this.getPages(this._config);\n  }\n\n  requestRowCount() {\n    const actionEvent: ScrollActionEvent = {\n      target: this,\n      action: ScrollAction.GET_ROW_COUNT,\n      pageRowCount: this.pageRowCount\n    };\n    this.action.emit(actionEvent);\n  }\n\n  getPageElements() {\n    if (this.pageElements) {\n      return this.pageElements;\n    }\n    const el: HTMLElement = this.el.querySelector('.scroll--content');\n    this.pageElements = Array.from(el.children) as Array<HTMLElement>;\n    return this.pageElements;\n  }\n\n  getPageRowCount(config: ScrollConfig) {\n    if (this.pageRowCount) {\n      return this.pageRowCount;\n    }\n    const BUFFER = 1.5;\n    this.containerHeight = this.el.offsetHeight;\n    const pageRowCount = Math.floor((this.containerHeight / config.rowHeight) * BUFFER);\n    return pageRowCount < config.minPageRowCount ? config.minPageRowCount : pageRowCount;\n  }\n\n  getPages(config: ScrollConfig) {\n    let remainRowCount = this.rowCount;\n    const rowHeight = config.rowHeight;\n    const pageRowCount = this.getPageRowCount(config);\n    const pages: Array<ScrollPage> = [];\n    let startRowIndex = -1;\n    let endRowIndex = -1;\n    let currentRowCount: number;\n    let index = 0;\n    let height = 0;\n    let top = 0;\n    while (remainRowCount > 0) {\n      startRowIndex = endRowIndex + 1;\n      currentRowCount = pageRowCount > remainRowCount ? remainRowCount : pageRowCount;\n      endRowIndex = startRowIndex + currentRowCount - 1;\n      height = currentRowCount * rowHeight;\n      pages.push({\n        top,\n        startRowIndex,\n        endRowIndex,\n        height,\n        index,\n        extraHeight: 0\n      });\n      remainRowCount -= currentRowCount;\n      top += height;\n      index++;\n    }\n    this.pageRowCount = pageRowCount;\n    return pages;\n  }\n\n  getCurrentPageIndexes() {\n    const pageElements = this.getPageElements();\n    const oldScrollTop = this.oldScrollTop;\n    const scrollTop = this.scrollTop;\n    const isDown = oldScrollTop <= scrollTop;\n    const currentPageIndexes: Array<number> = [];\n    const containerHeight = this.el.offsetHeight;\n    const pageCount = pageElements.length;\n    let prevPagesHeightSum = 0;\n    // down, prev pages height sum < scroll top current page + 1 page\n    // up, scroll top + container height <= page bottom (height) => page - 1\n    pageElements.some((el, i) => {\n      const pageHeight = el.offsetHeight;\n      if (isDown) {\n        if (prevPagesHeightSum <= scrollTop && scrollTop < prevPagesHeightSum + pageHeight) {\n          currentPageIndexes.push(i);\n          if (i + 1 < pageCount) {\n            currentPageIndexes.push(i + 1);\n          } else {\n            if (i - 1 > 0) {\n              currentPageIndexes.unshift(i - 1);\n            }\n          }\n          return true;\n        }\n      } else {\n        if (\n          scrollTop + containerHeight <= prevPagesHeightSum + pageHeight &&\n          prevPagesHeightSum < scrollTop + containerHeight\n        ) {\n          currentPageIndexes.push(i);\n          if (i - 1 >= 0) {\n            currentPageIndexes.unshift(i - 1);\n          } else {\n            if (i + 1 < pageCount) {\n              currentPageIndexes.push(i + 1);\n            }\n          }\n          return true;\n        }\n      }\n      prevPagesHeightSum += pageHeight;\n      return false;\n    });\n    this.oldScrollTop = scrollTop;\n    return currentPageIndexes;\n  }\n\n  getPageHeight() {\n    return this.pageRowCount * this._config.rowHeight;\n  }\n\n  getPageIndexByRowIndex(rowIndex: number) {\n    return Math.floor(rowIndex / this.pageRowCount);\n  }\n\n  getApproxPageIndex(scrollTop: number) {\n    // some pages can have the extra page height\n    const pageHeight = this.getPageHeight();\n    return Math.floor(scrollTop / pageHeight);\n  }\n\n  updateExtraHeight(extraHeightPages: Array<ExtraHeightPage>) {\n    const pages = this.state.pages.concat();\n    extraHeightPages.forEach(extraHeightPage => {\n      pages[extraHeightPage.pageIndex].extraHeight = extraHeightPage.extraHeight;\n    });\n    this.setState(pages);\n  }\n\n  getScrollTopByRowIndex(rowIndex: number) {\n    let scrollTop = 0;\n    this.state.pages.some(page => {\n      if (page.startRowIndex <= rowIndex && page.endRowIndex >= rowIndex) {\n        scrollTop += (rowIndex - page.startRowIndex + 1) * this.state.rowHeight;\n        return true;\n      } else {\n        scrollTop += page.height;\n        return false;\n      }\n    });\n    // move to the top of the row\n    return scrollTop - this.state.rowHeight;\n  }\n\n  hasEnoughSpaceToDisplay() {\n    return this.el.offsetHeight >= this._config.rowHeight;\n  }\n\n  hasDifferentPage(pageIndexes: Array<number>) {\n    // the page indexes are ordered by number;\n    const currentPageIndexes = this.currentPageIndexes;\n    if (currentPageIndexes.length < pageIndexes.length) {\n      return true;\n    }\n    return pageIndexes.some(pageIndex => !currentPageIndexes.includes(pageIndex));\n  }\n\n  updatePages() {\n    if (!this.hasEnoughSpaceToDisplay()) {\n      console.warn(`ScrollComponent: it doesn't enough space to scroll the content`);\n      return;\n    }\n    const currentPageIndexes = this.getCurrentPageIndexes();\n    // console.warn(this.currentPageIndexes, currentPageIndexes);\n    if (this.hasDifferentPage(currentPageIndexes)) {\n      this.currentPageIndexes = currentPageIndexes;\n      const action: ScrollActionEvent = {\n        target: this,\n        action: ScrollAction.UPDATE_PAGES,\n        pages: this.state.pages,\n        pageElements: this.getPageElements(),\n        currentPageIndexes: this.currentPageIndexes,\n        pageRowCount: this.pageRowCount\n      };\n      this.action.emit(action);\n    }\n  }\n\n  scrollByRowIndex(rowIndex: number) {\n    const scrollTop = this.getScrollTopByRowIndex(rowIndex);\n    this.scrollBarCmp.scrollToY(scrollTop);\n  }\n\n  onScrollAction(e: ScrollbarActionEvent) {\n    switch (e.action) {\n      case ScrollbarAction.SCROLL_Y:\n        const el = e.event.target as HTMLElement;\n        this.scrollTop = el.scrollTop;\n        if (!this.ticking) {\n          requestAnimationFrame(() => {\n            // don't use debounce since sometimes it renders incorrectly.\n            this.updatePages();\n            this.ticking = false;\n          });\n          this.ticking = true;\n        }\n        break;\n    }\n  }\n}\n","<mc-scrollbar class=\"scroll\" (action)=\"onScrollAction($event)\">\n  <div class=\"scroll--content\">\n    <div\n      *ngFor=\"let page of state?.pages; index as i\"\n      class=\"page\"\n      [style.height.px]=\"page.height + page.extraHeight\"\n      [attr.data-index]=\"i\"\n    >\n      <ng-container *ngTemplateOutlet=\"state?.tpl\"></ng-container>\n    </div>\n  </div>\n</mc-scrollbar>\n<div\n  *ngIf=\"!state?.rowCount\"\n  class=\"scroll--empty\"\n  [style.lineHeight.px]=\"state?.rowHeight\"\n>\n  {{state.isLoading ? state?.loadingText : state?.emptyText}}\n</div>\n<mc-loader\n  *ngIf=\"state?.displayLoader && state?.isLoading\"\n  [config]=\"{ themes: [Theme.horizontal]}\"\n></mc-loader>\n","import { ScrollbarActionEvent } from './../../shared.models';\nimport { Component, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { BaseComponent } from './../base.component';\nimport { PerfectScrollbarConfigInterface, PerfectScrollbarComponent } from 'ngx-perfect-scrollbar';\nimport { ScrollbarConfig, ScrollbarAction } from '../../shared.models';\n\n// Wrapping Third party components for providing encapsulated API and styles etc.\n// They can be replaced with a new good third party components in the future, but we can still use the exsiting APIs.\n@Component({\n  selector: 'mc-scrollbar',\n  styleUrls: ['scrollbar.component.scss'],\n  templateUrl: './scrollbar.component.html'\n})\nexport class ScrollbarComponent extends BaseComponent {\n  defaultConfig: ScrollbarConfig = {\n    suppressScrollX: true\n  };\n\n  _config: ScrollbarConfig;\n\n  defaultState: PerfectScrollbarConfigInterface = {\n    suppressScrollX: true\n  };\n\n  state: PerfectScrollbarConfigInterface;\n\n  @ViewChild(PerfectScrollbarComponent) scrollBarCmp: PerfectScrollbarComponent;\n\n  @Output() action = new EventEmitter<ScrollbarActionEvent>();\n\n  constructor(protected er: ElementRef) {\n    super(er);\n  }\n\n  scrollToTop() {\n    this.scrollBarCmp.directiveRef.scrollToTop();\n  }\n\n  scrollToBottom() {\n    this.scrollBarCmp.directiveRef.scrollToBottom();\n  }\n\n  scrollToElement(query: string, offset: number = null) {\n    this.scrollBarCmp.directiveRef.scrollToElement(query, offset);\n  }\n\n  scrollToY(y: number) {\n    this.scrollBarCmp.directiveRef.scrollToY(y);\n  }\n\n  emitActionEvent(action: ScrollbarAction, event: any) {\n    const actionEvent: ScrollbarActionEvent = {\n      action,\n      target: this,\n      event\n    };\n    this.action.emit(actionEvent);\n  }\n\n  onScrollY(e: any) {\n    this.emitActionEvent(ScrollbarAction.SCROLL_Y, e);\n  }\n\n  onScrollYEnd(e: any) {\n    this.emitActionEvent(ScrollbarAction.SCROLL_Y_END, e);\n  }\n}\n","<perfect-scrollbar [config]=\"state\" (psScrollY)=\"onScrollY($event)\" (psYReachEnd)=\"onScrollYEnd($event)\">\n  <ng-content></ng-content>\n</perfect-scrollbar>\n","import { Component, ElementRef, Output, EventEmitter } from '@angular/core';\nimport { BaseComponent } from '../../base.component';\nimport {\n  VisualizerSize,\n  VisualizerActionEvent,\n  VisualizerConfig,\n  VisualizerType,\n  Location,\n  VisualizerUnit,\n  VisualizerAction,\n  VisualizerRenderInfo\n} from '../../../shared.models';\nimport {\n  renderChartContainer,\n  getAxisSize,\n  renderAxis,\n  renderGrid,\n  initVisualizerSize,\n  getMinMax\n} from '../../../utils/viz-utils';\nimport * as d3 from 'd3';\n\n@Component({\n  selector: 'mc-axis',\n  styleUrls: ['axis.component.scss'],\n  template: ''\n})\nexport class AxisComponent extends BaseComponent {\n\n  renderInfo: VisualizerRenderInfo;\n\n  defaultConfig: VisualizerConfig = {\n    type: VisualizerType.BAR,\n    labelField: '',\n    dataFields: null,\n    data2Fields: null,\n    hasGrid: true,\n    ticks: 8,\n    scalePadding: 1,\n    scalePaddingInner: 0.2,\n    scalePaddingOuter: 0,\n    data: null,\n    decorationMaxRate: 1.1\n  };\n\n  _config: VisualizerConfig;\n\n  @Output() action = new EventEmitter<VisualizerActionEvent>();\n\n  constructor(protected er: ElementRef) {\n    super(er);\n  }\n\n  afterInitCmp() {\n    this.render(this._config);\n  }\n\n  applyConfig(config: VisualizerConfig) {\n    if (!config.labelField && config.data && config.data.columns) {\n      config.labelField = config.data.columns[0].field;\n    }\n    if (!config.dataFields && config.data && config.data.columns) {\n      config.dataFields = config.data.columns.reduce((fields, column) => {\n        if (column.field !== config.labelField) {\n          fields.push(column.field);\n        }\n        return fields;\n      }, []);\n    }\n  }\n\n  getLabels(): Array<string> {\n    const data = this._config.data;\n    if (data) {\n      const labelField = this._config.labelField || data.columns[0].field;\n      return data.data.map(d => d[labelField]);\n    }\n    return [];\n  }\n\n  getUnit(config: VisualizerConfig, visualizerSize: VisualizerSize): VisualizerUnit {\n    const minMax = getMinMax(config.dataFields, config.data.data, config.decorationMaxRate);\n    // y scale\n    const yScale = d3.scaleLinear()\n    .domain([minMax.min, minMax.max])\n    .rangeRound([visualizerSize.chart.height, 0]);\n\n    const yAxis = d3.axisLeft(yScale).ticks(config.ticks);\n\n    let y2Scale;\n    let y2Axis;\n    let minMax2;\n    if (config.data2Fields) {\n      minMax2 = getMinMax(config.data2Fields, config.data.data, config.decorationMaxRate);\n      y2Scale = d3.scaleLinear()\n      .domain([minMax2.min, minMax2.max])\n      .rangeRound([visualizerSize.chart.height, 0]);\n      y2Axis = d3.axisRight(y2Scale).ticks(config.ticks);\n    }\n\n    // x scale\n    const labels = this.getLabels();\n    let xScale = d3.scaleBand()\n    .domain(labels)\n    .rangeRound([0, visualizerSize.chart.width])\n    .padding(config.scalePadding)\n    .paddingInner(config.scalePaddingInner)\n    .paddingOuter(config.scalePaddingOuter);\n\n    // apply barWidth if needed\n    if (this._config.barConfig && this._config.barConfig.barWidth) {\n      const barWidth = this._config.barConfig.barWidth;\n      const barGroupWidth = xScale.bandwidth();\n      const newBarGroupWidth = barWidth * config.dataFields.length;\n      if (barGroupWidth < newBarGroupWidth) {\n        const widthGap = newBarGroupWidth - barGroupWidth;\n        const extraWidth = widthGap * labels.length;\n        visualizerSize.width += extraWidth;\n        visualizerSize.chart.width += extraWidth;\n        xScale = d3.scaleBand()\n        .domain(labels)\n        .rangeRound([0, visualizerSize.chart.width])\n        .padding(config.scalePadding)\n        .paddingInner(config.scalePaddingInner)\n        .paddingOuter(config.scalePaddingOuter);\n      }\n    }\n\n    const xAxis = d3.axisBottom(xScale);\n    // TODO: you can have a color array instead of \"schemeCategory10\".\n    const colorScale = d3.scaleOrdinal(d3.schemeCategory10);\n    return {\n      yScale,\n      yAxis,\n      xScale,\n      xAxis,\n      y2Scale,\n      y2Axis,\n      labels,\n      colorScale,\n      fields: config.dataFields,\n      fields2: config.data2Fields,\n      minMax,\n      minMax2\n    };\n  }\n\n  getSize(\n    visualizerSize,\n    unit\n  ) {\n    // *** render for measuring size ***\n    const svg = renderChartContainer(this.el, visualizerSize);\n    // left / right margin\n    visualizerSize = getAxisSize(this.el, svg, Location.LEFT, unit.yAxis, visualizerSize, [\n      'y-axis'\n    ]);\n    if (this._config.data2Fields) {\n      visualizerSize = getAxisSize(this.el, svg, Location.RIGHT, unit.y2Axis, visualizerSize, [\n        'y2-axis'\n      ]);\n    }\n    visualizerSize = getAxisSize(this.el, svg, Location.BOTTOM, unit.xAxis, visualizerSize, [\n      'x-axis'\n    ]);\n\n    // save for re-use the chart drawing area\n    visualizerSize.chart.height =\n      visualizerSize.height - visualizerSize.margin.top - visualizerSize.margin.bottom;\n    visualizerSize.chart.width =\n      visualizerSize.width - visualizerSize.margin.left - visualizerSize.margin.right;\n\n    // *** re-render with correct size ***\n    this.el.innerHTML = '';\n    return visualizerSize;\n  }\n\n  render(config: VisualizerConfig) {\n    let visualizerSize = initVisualizerSize(this.el);\n    let unit = this.getUnit(config, visualizerSize);\n    visualizerSize = this.getSize(\n      visualizerSize,\n      unit\n    );\n    // update unit by the correct size\n    unit = this.getUnit(config, visualizerSize);\n\n    // *** re-render with correct size ***\n    const svg = renderChartContainer(this.el, visualizerSize);\n    renderAxis(svg, Location.LEFT, unit.yAxis, visualizerSize.chart, ['y-axis']);\n    if (config.data2Fields) {\n      renderAxis(svg, Location.RIGHT, unit.y2Axis, visualizerSize.chart, [\n        'y2-axis'\n      ]);\n    }\n    renderAxis(svg, Location.BOTTOM, unit.xAxis, visualizerSize.chart, ['x-axis']);\n\n    // render grid\n    if (config.hasGrid) {\n      renderGrid(svg, 'y', unit.yAxis, visualizerSize.chart, ['y-grid']);\n    }\n    this.renderInfo = {\n      svg,\n      unit,\n      size: visualizerSize\n    };\n  }\n\n  emitRenderedActionEvent() {\n    const action: VisualizerActionEvent = {\n      target: this,\n      action: VisualizerAction.RENDERED,\n      config: this._config,\n      renderInfo: this.renderInfo\n    };\n    this.action.emit(action);\n  }\n}\n","import { Component, ElementRef, Output, EventEmitter } from '@angular/core';\nimport { BaseComponent } from '../../base.component';\nimport {\n  VisualizerActionEvent,\n  VisualizerConfig,\n  VisualizerType,\n  VisualizerAction\n} from '../../../shared.models';\nimport {\n  renderRects\n} from '../../../utils/viz-utils';\n\ninterface State {\n  axisConfig: VisualizerConfig;\n}\n\n@Component({\n  selector: 'mc-bar',\n  styleUrls: ['bar.component.scss'],\n  templateUrl: 'bar.component.html'\n})\nexport class BarComponent extends BaseComponent {\n\n  defaultState: State = {\n    axisConfig: null\n  };\n\n  defaultConfig: VisualizerConfig = {\n    type: VisualizerType.BAR,\n    barConfig: {\n      barWidth: 20\n    },\n    labelField: '',\n    dataFields: null,\n    data2Fields: null,\n    hasGrid: true,\n    ticks: 8,\n    scalePadding: 1,\n    scalePaddingInner: 0.2,\n    scalePaddingOuter: 0,\n    data: null\n  };\n\n  state: State;\n\n  _config: VisualizerConfig;\n\n  @Output() action = new EventEmitter<VisualizerActionEvent>();\n\n  constructor(protected er: ElementRef) {\n    super(er);\n  }\n\n  applyState(config: VisualizerConfig) {\n    this.setState({ axisConfig: config });\n  }\n\n  onAxisAction(e: VisualizerActionEvent) {\n    switch (e.action) {\n      case VisualizerAction.RENDERED:\n        renderRects(e.config, e.renderInfo);\n        break;\n    }\n  }\n}\n","<mc-axis [config]=\"state.axisConfig\" (action)=\"onAxisAction($event)\"></mc-axis>\n","import { Component, ElementRef, Output, EventEmitter } from '@angular/core';\nimport { BaseComponent } from '../../base.component';\nimport {\n  VisualizerActionEvent,\n  VisualizerConfig,\n  VisualizerType,\n  VisualizerAction\n} from '../../../shared.models';\nimport {\n  renderLines\n} from '../../../utils/viz-utils';\n\ninterface State {\n  axisConfig: VisualizerConfig;\n}\n\n@Component({\n  selector: 'mc-line',\n  styleUrls: ['line.component.scss'],\n  templateUrl: 'line.component.html'\n})\nexport class LineComponent extends BaseComponent {\n\n  defaultState: State = {\n    axisConfig: null\n  };\n\n  defaultConfig: VisualizerConfig = {\n    type: VisualizerType.LINE,\n    labelField: '',\n    dataFields: null,\n    data2Fields: null,\n    hasGrid: true,\n    ticks: 8,\n    scalePadding: 1,\n    scalePaddingInner: 0.2,\n    scalePaddingOuter: 0,\n    data: null\n  };\n\n  state: State;\n\n  _config: VisualizerConfig;\n\n  @Output() action = new EventEmitter<VisualizerActionEvent>();\n\n  constructor(protected er: ElementRef) {\n    super(er);\n  }\n\n  applyState(config: VisualizerConfig) {\n    this.setState({ axisConfig: config });\n  }\n\n  onAxisAction(e: VisualizerActionEvent) {\n    switch (e.action) {\n      case VisualizerAction.RENDERED:\n        renderLines(e.config, e.renderInfo);\n        break;\n    }\n  }\n}\n","<mc-axis [config]=\"state.axisConfig\" (action)=\"onAxisAction($event)\"></mc-axis>\n","import {\n  VisualizerConfig,\n  VisualizerType,\n  GridConfig,\n  GridActionEvent,\n  GridAction,\n  VisualizerActionEvent,\n  VisualizerAction\n} from '../../shared.models';\nimport {\n  Component,\n  ElementRef,\n  Input,\n  ComponentRef,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { BaseComponent } from '../base.component';\nimport { SharedService } from '../../shared.service';\nimport { GridComponent } from '../grid/grid.component';\nimport { Subscription } from 'rxjs';\nimport { BarComponent } from './bar/bar.component';\nimport { LineComponent } from './line/line.component';\n\n@Component({\n  selector: 'mc-visualizer',\n  styleUrls: ['visualizer.component.scss'],\n  templateUrl: 'visualizer.component.html'\n})\nexport class VisualizerComponent extends BaseComponent {\n  private cr: ComponentRef<any>;\n  private compSubs: Array<Subscription> = [];\n\n  defaultConfig: VisualizerConfig = {\n    type: VisualizerType.GRID,\n    gridConfig: {},\n    labelField: '',\n    dataFields: null,\n    data2Fields: null,\n    hasGrid: true,\n    ticks: 8,\n    scalePadding: 1,\n    scalePaddingInner: 0.2,\n    scalePaddingOuter: 0,\n    data: null\n  };\n\n  _config: VisualizerConfig;\n\n  @Input()\n  set data(data: any) {\n    if (data) {\n      this._config.data = data;\n      if (this.rendered) {\n        this.render(this._config);\n      }\n    }\n  }\n\n  @Output() action = new EventEmitter<VisualizerActionEvent>();\n\n  constructor(protected er: ElementRef, private sharedService: SharedService) {\n    super(er);\n  }\n\n  afterInitCmp() {\n    this.render(this._config);\n  }\n\n  render(config: VisualizerConfig) {\n    if (config.data) {\n      switch (config.type) {\n        case VisualizerType.GRID:\n          this.rednerGrid(config);\n          break;\n        case VisualizerType.BAR:\n          this.renderBar(config);\n          break;\n        case VisualizerType.LINE:\n          this.renderLine(config);\n          break;\n      }\n    }\n  }\n\n  renderBar(config: VisualizerConfig) {\n    this.removeContent();\n    const cr: ComponentRef<BarComponent> = this.sharedService.addComponent(\n      BarComponent,\n      this.el\n    );\n    const instance = cr.instance;\n    instance.config = config;\n    this.cr = cr;\n  }\n\n  renderLine(config: VisualizerConfig) {\n    this.removeContent();\n    const cr: ComponentRef<LineComponent> = this.sharedService.addComponent(\n      LineComponent,\n      this.el\n    );\n    const instance = cr.instance;\n    instance.config = config;\n    this.cr = cr;\n  }\n\n  rednerGrid(config: VisualizerConfig) {\n    this.removeContent();\n    const cr: ComponentRef<GridComponent> = this.sharedService.addComponent(\n      GridComponent,\n      this.el\n    );\n    const instance = cr.instance;\n    const { columns, data } = config.data;\n    const cfg: GridConfig = Object.assign(\n      {\n        themes: ['visualizer', ...config.themes],\n        rowHeight: 42,\n        columns,\n        data: {\n          rows: data,\n          rowCount: data.length\n        }\n      },\n      config.gridConfig\n    );\n    instance.config = cfg;\n    this.compSubs.push(\n      instance.action.subscribe((e: GridActionEvent) => {\n        switch (e.action) {\n          case GridAction.SELECT_ROW:\n            this.action.emit({\n              target: this,\n              event: e,\n              action: VisualizerAction.SELECT_ITEM,\n              data: e.rowData,\n              el: e.rowEl\n            });\n            break;\n        }\n      })\n    );\n    this.cr = cr;\n  }\n\n  removeContent() {\n    if (this.cr) {\n      this.compSubs.forEach(s => s.unsubscribe());\n      this.sharedService.removeComponent(this.cr);\n      this.cr = null;\n    }\n  }\n\n  destroyCmp() {\n    this.removeContent();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedService } from './shared.service';\nimport {\n  ListComponent,\n  IconComponent,\n  ListItemComponent,\n  PopupComponent,\n  ScrollbarComponent,\n  DrawerComponent,\n  MaskComponent,\n  GridComponent,\n  GridBodyComponent,\n  GridHeaderComponent,\n  ScrollComponent,\n  LoaderComponent,\n  VisualizerComponent,\n  TextComponent,\n  BarComponent,\n  AxisComponent,\n  LineComponent\n} from './components';\nimport {\n  PerfectScrollbarModule\n} from 'ngx-perfect-scrollbar';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [CommonModule, BrowserModule, RouterModule, HttpClientModule, PerfectScrollbarModule],\n  declarations: [\n    ListComponent,\n    IconComponent,\n    ListItemComponent,\n    MaskComponent,\n    DrawerComponent,\n    ScrollbarComponent,\n    GridComponent,\n    GridBodyComponent,\n    GridHeaderComponent,\n    ScrollComponent,\n    LoaderComponent,\n    PopupComponent,\n    VisualizerComponent,\n    BarComponent,\n    TextComponent,\n    AxisComponent,\n    LineComponent\n  ],\n  exports: [\n    ListComponent,\n    IconComponent,\n    ListItemComponent,\n    MaskComponent,\n    DrawerComponent,\n    ScrollbarComponent,\n    GridComponent,\n    GridBodyComponent,\n    GridHeaderComponent,\n    ScrollComponent,\n    LoaderComponent,\n    PopupComponent,\n    VisualizerComponent,\n    BarComponent,\n    TextComponent,\n    AxisComponent,\n    LineComponent\n  ],\n  providers: [\n    SharedService\n  ]\n})\nexport class McUiModule {}\n","import { TemplateRef } from '@angular/core';\n// ************* common component enums **************\n\nexport enum Align {\n  LEFT = 'LEFT',\n  RIGHT = 'RIGHT',\n  CENTER = 'CENTER',\n  TOP = 'TOP',\n  BOTTOM = 'BOTTOM'\n}\n\nexport enum SortDirection {\n  DESC = 'DESC',\n  ASC = 'ASC'\n}\n\nexport enum Icon {\n  menu = 'menu',\n  logo = 'logo',\n  user = 'user',\n  list = 'list',\n  downloadGreen = 'download-green',\n  download = 'download',\n  arrowLeft = 'arrow-left',\n  close = 'close',\n  arrowDown = 'arrow-down',\n  chevron = 'chevron'\n}\n\nexport enum ComponentTheme {\n  gridBodyAccordion = 'grid-body-accordion,',\n  gridHeaderSort = 'grid-header-sort',\n  horizontal = 'horizontal',\n  popup = 'popup'\n}\n\nexport enum PopupStartFrom {\n  TOP,\n  BOTTOM\n}\n\nexport enum Location {\n  LEFT = 'LEFT',\n  RIGHT = 'RIGHT',\n  CENTER = 'CENTER',\n  TOP = 'TOP',\n  BOTTOM = 'BOTTOM'\n}\n\nexport enum InputType {\n  text = 'text',\n  number = 'number',\n  search = 'search',\n  email = 'email',\n  tel = 'tel',\n  url = 'url',\n  range = 'range',\n  datetimeLocal = 'datetime-local',\n  month = 'month',\n  time = 'time',\n  week = 'week',\n  date = 'date',\n  color = 'color'\n}\n\nexport enum DataType {\n  STRING,\n  NUMBER,\n  DATE\n}\n\n// ***** Component Action ****** Action need to have a string, since they can be 'data-action'.\n\nexport enum ListAction {\n  UNSELECT_ITEM = 'UNSELECT_ITEM',\n  SELECT_ITEM = 'SELECT_ITEM'\n}\n\nexport enum ScrollDataAction {\n  INIT = 'INIT',\n  APPEND = 'APPEND',\n  RELOAD = 'RELOAD',\n  INSERT = 'INSERT',\n  SORT = 'SORT'\n}\n\nexport enum ScrollbarAction {\n  SCROLL_Y = 'SCROLL_Y',\n  SCROLL_Y_END = 'SCROLL_Y_END'\n}\n\nexport enum ComponentAction {\n  RENDERED = 'RENDERED',\n  HID = 'HID'\n}\n\nexport enum GridAction {\n  SELECT_CELL = 'SELECT_CELL',\n  SORT = 'SORT',\n  MOUSEOVER_CELL = 'MOUSEOVER_CELL',\n  UPDATE_WIDTH = 'UPDATE_WIDTH',\n  LOADED = 'LOADED',\n  SELECT_COLUMN = 'SELECT_COLUMN',\n  GET_DATA = 'GET_DATA',\n  SELECT_ROW = 'SELECT_ROW',\n  UNSELECT_ROW = 'UNSELECT_ROW',\n  REMOVE_PAGE = 'REMOVE_PAGE'\n}\n\nexport enum GridAccordionAction {\n  UNSELECT_ROW = 'UNSELECT_ROW',\n  SELECT_ROW = 'SELECT_ROW',\n  SELECT_CELL = 'SELECT_CELL',\n  SORT = 'SORT'\n}\n\nexport enum ScrollAction {\n  UPDATE_PAGES = 'UPDATE_PAGES',\n  GET_ROW_COUNT = 'GET_ROW_COUNT'\n}\n\nexport enum InputAction {\n  CHANGE = 'CHANGE',\n  KEY_UP = 'KEY_UP'\n}\n\nexport enum VisualizerAction {\n  SELECT_ITEM = 'SELECT_ITEM',\n  RENDERED = 'RENDERED',\n}\n\nexport enum VisualizerType {\n  GRID,\n  BAR,\n  HORIZONTAL_BAR,\n  LINE,\n  BAR_LINE\n}\n\nexport enum VisualizerScaleType {\n  LINEAR,\n  BAND\n}\n\nexport enum VisualizerMetaField {\n  total = '__total__'\n}\n\n// ************* shared component interface **************\n\n// **** component config ****\nexport interface ComponentConfig {\n  themes?: Array<string>;\n}\n\nexport interface ScrollbarConfig extends ComponentConfig {\n  suppressScrollX?: boolean;\n}\n\nexport interface ScrollConfig extends ComponentConfig {\n  loadingText?: string;\n  emptyText?: string;\n  rowHeight?: number;\n  displayLoader?: boolean;\n  rowCount?: number;\n  minPageRowCount?: number;\n}\n\nexport interface PopupConfig extends ComponentConfig {\n  checkTargetLocation?: boolean;\n  startFrom?: PopupStartFrom;\n  offsetX?: number;\n  offsetY?: number;\n  tpl?: TemplateRef<any>;\n  targetEl?: HTMLElement;\n  hasIndicator?: boolean;\n  center?: boolean;\n  hasBorder?: boolean;\n  hasCloseButton?: boolean;\n}\n\nexport interface MaskConfig extends ComponentConfig {\n  visible: boolean;\n  transparent: boolean;\n}\n\nexport interface ListConfig extends ComponentConfig {\n  rowHeight?: number;\n  multiSelect?: boolean;\n  toggleSelect?: boolean;\n  selectedItems?: Array<ListItem>;\n  data?: Array<ListItem>;\n  itemTpl?: TemplateRef<any>;\n  idField?: string;\n  nameField?: string;\n  horizontal?: boolean;\n}\n\nexport interface ListItemConfig extends ComponentConfig {\n  tpl: TemplateRef<any>;\n  data: ListItem;\n  idField: string;\n  nameField: string;\n  toggleSelect: boolean;\n  height: number;\n  selected?: boolean;\n  horizontal: boolean;\n}\n\nexport interface LegendListConfig extends ComponentConfig {\n  data?: Array<ListItem>;\n}\n\nexport interface IconConfig extends ComponentConfig {\n  icon: string;\n}\n\nexport interface DrawerConfig extends ComponentConfig {\n  from?: string | 'top' | 'left' | 'right' | 'bottom';\n  tpl?: TemplateRef<any>;\n  mask?: boolean;\n}\n\nexport interface GridConfig extends ComponentConfig {\n  columns?: Array<Column>;\n  columnTpls?: any;\n  startRowIndex?: number;\n  selectableCell?: boolean;\n  selectedCell?: GridCellInfo;\n  columnWidthIsRatio?: boolean;\n  selectCellByMouseOver?: boolean;\n  emptyText?: string;\n  idField?: string;\n  rowHeight?: number;\n  displayLoader?: boolean;\n  data?: ScrollData;\n  // header\n  headerTpls?: any;\n  headerRowHeight?: number;\n  headerData?: Array<Array<GridHeaderCell>>;\n  atLeastOneSelectedColumnRequired?: boolean;\n  selectedColumns?: Array<Column>;\n  // scroll\n  loadingText?: string;\n  minPageRowCount?: number;\n  rowCount?: number;\n  // body accordion\n  hasAccordionRow?: boolean;\n  accordionContentTpl?: TemplateRef<any>;\n  accordionContentHeight?: number;\n  selectedRows?: Array<any>;\n  multiSelectRow?: boolean;\n  adjustHeight?: boolean;\n}\n\nexport interface GridHeaderConfig extends ComponentConfig {\n  rowHeight?: number;\n  tpls?: any;\n  data?: Array<Array<GridHeaderCell>>;\n  atLeastOneSelectedColumnRequired?: boolean;\n  selectedColumns?: Array<Column>;\n  sortItem?: SortItem;\n}\n\nexport interface GridBodyConfig extends ComponentConfig {\n  rowHeight?: number;\n  idField?: string;\n  tpls?: any;\n  selectCellByMouseOver?: boolean;\n  data?: Array<any>;\n  columns?: Array<Column>;\n  startRowIndex?: number;\n  selectableCell?: boolean;\n  selectedCell?: GridCellInfo;\n  hasAccordionRow?: boolean;\n  accordionContentTpl?: TemplateRef<any>;\n  accordionContentHeight?: number;\n  selectedRows?: Array<any>;\n  multiSelectRow?: boolean;\n  pageIndex?: number;\n}\n\nexport interface VisualizerConfig extends ComponentConfig {\n  type: VisualizerType;\n  gridConfig?: GridConfig; // type's config\n  barConfig?: BarConfig;\n  dataFields?: Array<string>;\n  data2Fields?: Array<string>; // for bar-line chart etc.\n  labelField?: string;\n  hasGrid?: boolean;\n  data: VisualizerData;\n  ticks?: number;\n  scalePadding?: number;\n  scalePaddingInner?: number;\n  scalePaddingOuter?: number;\n  decorationMaxRate?: number;\n}\n\nexport interface BarConfig {\n  barWidth?: number;\n}\n\nexport interface TextConfig extends ComponentConfig {\n  type: InputType;\n  name: string;\n  value: string;\n  placeholder: string;\n}\n\n// **** component action event ****\n\nexport interface ComponentEvent {\n  target?: any; // component instance\n  event?: any; // for dom event\n  data?: any;\n  el?: HTMLElement;\n}\n\nexport interface ComponentActionEvent extends ComponentEvent {\n  action: ComponentAction;\n}\n\nexport interface ScrollbarActionEvent extends ComponentEvent {\n  action: ScrollbarAction;\n}\n\nexport interface ScrollActionEvent extends ComponentEvent {\n  action: ScrollAction;\n  currentPageIndexes?: Array<number>;\n  addingPageIndexes?: Array<number>;\n  removingPageIndexes?: Array<number>;\n  pageElements?: Array<HTMLElement>;\n  pageRowCount?: number;\n  pages?: Array<ScrollPage>;\n}\n\nexport interface ListItemActionEvent extends ComponentEvent {\n  action: ListAction; // action type\n  selected: boolean;\n  data: ListItem;\n}\n\nexport interface GridHeaderActionEvent extends ComponentEvent {\n  action?: GridAction; // action type\n  column?: Column;\n  selectedColumns?: Array<Column>;\n  sort?: SortItem;\n}\n\nexport interface GridBodyActionEvent extends ComponentEvent {\n  action?: GridAction; // action type\n  id?: string;\n  cellEl?: HTMLElement;\n  rowEl?: HTMLElement;\n  rowIndex?: number;\n  cellIndex?: number;\n  field?: string;\n  rowData?: any;\n  cellData?: any;\n  selectedCell?: GridCellInfo;\n  accordionContentEl?: HTMLElement;\n  pageIndex?: number;\n}\n\nexport interface ListActionEvent extends ComponentEvent {\n  action: any; // action type\n  selectedItem?: any;\n  selectedItems?: any[];\n  sort?: SortItem;\n}\n\nexport interface GridActionEvent extends ComponentEvent {\n  action?: GridAction;\n  selectedColumns?: Column[];\n  cellData?: any;\n  cellIndex?: number;\n  cellEl?: HTMLElement;\n  rowEl?: HTMLElement;\n  field?: string;\n  id?: any;\n  rowData?: any;\n  rowIndex?: number;\n  selectedCell?: any;\n  sort?: SortItem;\n  neededStartRowIndex?: number;\n  neededEndRowIndex?: number;\n  accordionContentEl?: HTMLElement;\n  selectedRows?: Array<any>;\n  pageRowCount?: number;\n  pageIndex?: number;\n}\n\nexport interface InputActionEvent extends ComponentEvent {\n  action: InputAction;\n  oldValue?: string;\n  value: string;\n  name: string;\n}\n\nexport interface VisualizerActionEvent extends ComponentEvent {\n  action?: VisualizerAction;\n  config?: VisualizerConfig;\n  renderInfo?: VisualizerRenderInfo;\n}\n\n// **** data type ****\n\n// for extra grid row information\nexport interface GridRowMeta {\n  accordionContentHeight?: number;\n  class?: string;\n  fieldMeta?: any;\n}\n\n// GridRowMeta.fieldMeta\nexport interface GridFieldMeta {\n  title: string;\n  data: any;\n}\n\nexport interface Message {\n  from?: string;\n  to: string;\n  action: string;\n  data?: any;\n}\n\nexport interface ListItem {\n  id?: any;\n  name?: string;\n  value?: any;\n  theme?: any;\n}\n\nexport interface ScrollPage {\n  startRowIndex: number;\n  endRowIndex: number;\n  index: number;\n  height: number;\n  extraHeight: number;\n  top: number;\n}\n\nexport interface GridRowDataMeta {\n  id: string;\n  pageIndex: number;\n  rowIndex: number;\n  rowData: any;\n}\n\nexport interface SortItem {\n  fieldName: string;\n  direction: SortDirection;\n}\n\nexport interface Message {\n  from?: string;\n  to: string;\n  action: string;\n  data?: any;\n}\nexport interface Column {\n  field?: string; // field name;\n  name?: string; // column name\n  type?: DataType;\n  width?: number;\n  sort?: boolean;\n  sortDirection?: SortDirection;\n  fixedWidth?: boolean;\n  class?: string;\n  align?: Align;\n  noOverflowMask?: boolean;\n  selectable?: boolean;\n  selectableHeader?: boolean;\n  selected?: boolean; // for selectable header\n}\n\nexport interface GridHeaderCell extends Column {\n  colspan?: number;\n  rowspan?: number;\n  isLastRow?: boolean;\n  isFirstRow?: boolean;\n  isFirstCol?: boolean;\n  isLastCol?: boolean;\n}\n\nexport interface GridCellInfo {\n  row: number;\n  col: number;\n  data?: any;\n}\n\nexport interface ScrollData {\n  action?: ScrollDataAction;\n  rows?: any[];\n  startRowIndex?: number;\n  rowCount?: number;\n}\n\nexport interface GridNeedDataEvent {\n  target: any;\n  index: number;\n  pageIndex: number;\n  pageRowCount: number;\n  page1Index: number;\n  page2Index: number;\n  action: ScrollDataAction;\n  sort: SortItem;\n}\n\nexport interface Box {\n  width?: number;\n  height?: number;\n  left?: number;\n  top?: number;\n}\n\nexport interface ExtraHeightPage {\n  pageIndex: number;\n  extraHeight: number;\n}\n\nexport interface VisualizerChartSize {\n  width?: number;\n  height?: number;\n  rotateXAxisText?: boolean;\n}\n\nexport interface Margin {\n  left?: number;\n  right?: number;\n  bottom?: number;\n  top?: number;\n}\nexport interface VisualizerSize {\n  width: number;\n  height: number;\n  // container - margin size for easy using.\n  chart?: VisualizerChartSize;\n  margin?: Margin;\n}\n\n/**\n * Visualizer Basic Data Structure\n */\n\nexport interface VisualizerData {\n  columns: Array<Column>;\n  data: Array<any>;\n}\n\nexport interface VisualizerItemDomain {\n  min: number;\n  max: number;\n}\n\nexport interface Filter {\n  field: string;\n  type?: DataType;\n  keyword: string;\n}\n\nexport interface MinMax {\n  min: number;\n  max: number;\n}\n\nexport interface VisualizerUnit {\n  yScale?: any;\n  yAxis?: any;\n  xScale?: any;\n  // rect group\n  xScaleInner?: any;\n  xAxis?: any;\n  y2Scale?: any;\n  y2Axis?: any;\n  labels?: Array<string>;\n  colorScale?: any;\n  fields?: Array<string>;\n  fields2?: Array<string>;\n  minMax?: MinMax;\n  minMax2?: MinMax;\n  // line\n  line?: any;\n}\n\nexport interface VisualizerRenderInfo {\n  svg?: any;\n  unit?: VisualizerUnit;\n  size?: VisualizerSize;\n}\n","import { Injectable, ComponentFactoryResolver, Injector, ApplicationRef, ComponentRef } from '@angular/core';\nimport { Message } from './shared.models';\nimport { Observable, BehaviorSubject, fromEvent } from 'rxjs/index';\n\n/**\n * App Level shared services e.g) Dynamic Components or EventEmitters for sending message between UI Page Componensts, window resize etc.\n */\n@Injectable()\nexport class SharedService {\n  private _message = new BehaviorSubject<Message>({ from: '', to: '', action: '' });\n  message = this._message.asObservable();\n  windowResize: Observable<any>;\n  bodyPress: Observable<any>;\n\n  private data = new Map();\n\n  constructor(private _resolver: ComponentFactoryResolver, private injector: Injector, private appRef: ApplicationRef) {\n    this.bodyPress = fromEvent(this.getBody(), 'click');\n    this.windowResize = fromEvent(window, 'resize');\n  }\n\n  // for global data\n  setData(key: any, value: any) {\n    this.data.set(key, value);\n  }\n\n  getData(key: any) {\n    return this.data.get(key);\n  }\n\n  // Sending a message between components that can't be accessed by Input/Output\n  sendMessage(message: Message) {\n    this._message.next(message);\n  }\n\n  addComponent(cmpType: any, parentEl = document.body) {\n    // https://malcoded.com/posts/angular-dynamic-components/\n    const factory = this._resolver.resolveComponentFactory(cmpType);\n    const cmp: ComponentRef<any> = factory.create(this.injector);\n    this.appRef.attachView(cmp.hostView);\n    parentEl.appendChild(cmp.location.nativeElement);\n    return cmp;\n  }\n\n  removeComponent(cmp) {\n    this.appRef.detachView(cmp.hostView);\n    cmp.destroy();\n    cmp = null;\n  }\n\n  getBody() {\n    return document.body;\n  }\n}\n","import {\n  SortItem,\n  SortDirection,\n  Column,\n  VisualizerData,\n  Filter,\n  DataType\n} from '../shared.models';\nimport { isEmpty } from './utils';\nimport * as papa from 'papaparse';\n\nexport function sortObjectArray(data: any[], sort: SortItem) {\n  data = data.concat();\n  data.sort((a, b) => {\n    let valA = a[sort.fieldName];\n    let valB = b[sort.fieldName];\n    if (sort.direction === SortDirection.DESC) {\n      [valA, valB] = [valB, valA];\n    }\n    return typeof valA === 'string' ? valA.localeCompare(valB) : valA - valB;\n  });\n  return data;\n}\n\nexport function setStateIf(target: any, source: any) {\n  // if source has target keys, then apply them to target\n  source = Object.assign({}, source);\n  return Object.keys(target).reduce((t, key) => {\n    if (!isEmpty(source[key])) {\n      t[key] = source[key];\n    } else {\n      t[key] = target[key];\n    }\n    return t;\n  }, {});\n}\n\nexport function setState(target: any, source: any) {\n  // copy source to target\n  source = Object.assign({}, source);\n  Object.keys(source).forEach(key => {\n    target[key] = source[key];\n  });\n  return target;\n}\n\nexport function convertCsvToJson(text: string) {\n  const result = papa.parse(text, { header: true });\n  if (result.error) {\n    console.warn('CSV parsing Error: ' + result.error);\n  }\n  return result.data;\n}\n\nexport function convertKeysToColumns(obj: any): Array<Column> {\n  return Object.keys(obj).reduce((columns: Array<Column>, key) => {\n    columns.push({ field: key, name: key });\n    return columns;\n  }, []);\n}\n\nexport function convertCsvToVisualizerData(\n  text: string,\n  filters: Array<Filter> = null\n): VisualizerData {\n  let data: Array<any> = convertCsvToJson(text);\n  const columns = convertKeysToColumns(data[0] || {});\n  if (filters) {\n    data = data.filter((item: any) =>\n      filters.some(\n        filter => {\n          const value = item[filter.field];\n          const keyword = filter.keyword;\n          switch (filter.type) {\n            case DataType.DATE:\n            case DataType.NUMBER:\n              // TODO: compare conditions\n              return value === keyword;\n            default:\n              // string\n              return (value + '').toLowerCase().includes(keyword.toLowerCase());\n          }\n        }\n      )\n    );\n  }\n  return {\n    columns,\n    data\n  };\n}\n","export function getComponentNameByElement(el: HTMLElement) {\n  const items = el.tagName.toLowerCase().split('-');\n  items.shift();\n  return items.join('-');\n}\n\nexport function getThemeClasses(compName: string, themes: string | string[]) {\n  // normalize themes\n  themes = !Array.isArray(themes) ? [themes] : themes.concat();\n  return themes.reduce((agg, d) => {\n    // d can be empty\n    if (d) {\n      agg.push(compName + '-' + d);\n    }\n    return agg;\n  }, []);\n}\n\nexport function getContainerWidth(conEl: HTMLElement) {\n  const stylePosition = conEl.style.position;\n  conEl.style.position = 'relative';\n  const children = Array.from(conEl.children);\n  children.forEach((el: HTMLElement) => (el.style.display = 'none'));\n  const width = conEl.clientWidth;\n  conEl.style.position = stylePosition;\n  children.forEach((el: HTMLElement) => (el.style.display = ''));\n  return width;\n}\n\n// selector: class name(.class-name) or tag name (mc-componentname)\nexport function findParentDom(dom: any, selector: string, stopClassName = '', depth = 10) {\n  let cls = '';\n  let resultDom: HTMLElement;\n  if (!dom || !dom.nodeName) {\n    return null;\n  }\n  if (selector.startsWith('.')) {\n    cls = selector.slice(1);\n  }\n\n  while (depth--) {\n    if (\n      !dom ||\n      !dom.classList ||\n      dom.nodeName === 'BODY' ||\n      (stopClassName ? dom.classList.contains(stopClassName) : false)\n    ) {\n      resultDom = null;\n      break;\n    }\n    if (cls) {\n      if (dom.classList.contains(cls)) {\n        resultDom = dom;\n        break;\n      }\n    } else {\n      if (dom.nodeName.toLowerCase() === selector.toLowerCase()) {\n        resultDom = dom;\n        break;\n      }\n    }\n    dom = dom.parentNode;\n  }\n  return resultDom;\n}\n","import { GridRowMeta } from './../shared.models';\nimport { Column } from '../shared.models';\n\nexport function getAutoColumnWidth(\n  columns: Column[],\n  containerWidth: number,\n  columnWidthIsRatio = false,\n  minWidth = 0\n) {\n  const hasColWidth = columns && columns[0].width;\n  if (columnWidthIsRatio) {\n    if (hasColWidth) {\n      let totalFixedWidth = 0;\n      const totalWidth = columns.reduce((tot: number, col: Column) => {\n        if (col.fixedWidth) {\n          totalFixedWidth += col.width;\n        } else {\n          tot = tot + col.width;\n        }\n        return tot;\n      }, 0);\n      const adjustContainerWidth = containerWidth - totalFixedWidth;\n      let adjustTotalWidth = 0;\n      columns = columns.map(column => {\n        // Use Math.floor since the cell width has x.xx, the web browser doesn't display correctly. so, we need integer. If there is a gap, we need to spread it to the columns.\n        column.width = column.fixedWidth\n          ? column.width\n          : Math.floor((column.width / totalWidth) * adjustContainerWidth);\n        adjustTotalWidth += column.width;\n        return column;\n      });\n      // if it remains the width, spread it\n      let remainWidth = adjustContainerWidth - adjustTotalWidth;\n      while (remainWidth > 0) {\n        columns.forEach(column => {\n          if (remainWidth > 0) {\n            column.width++;\n            remainWidth--;\n          }\n        });\n      }\n    } else {\n      columns = getEvenColumnWidth(columns, containerWidth, minWidth);\n    }\n  } else {\n    columns = getEvenColumnWidth(columns, containerWidth, minWidth);\n  }\n  return columns;\n}\n\nexport function getEvenColumnWidth(columns: Column[], containerWidth: number, minWidth = 0) {\n  // auto column width\n  let colWidth = containerWidth / columns.length;\n  colWidth = colWidth < minWidth ? minWidth : colWidth;\n  // update state\n  return columns.map(column => {\n    column.width = colWidth;\n    return column;\n  });\n}\n","export function isEmpty(val: any) {\n  return val === null || val === '' || val === undefined;\n}\n\nexport function debounce(callback: Function, wait: number, context: any = this) {\n  let timeout;\n  return (...args: any[]) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(function() {\n      timeout = null;\n      callback.apply(context, args);\n    }, wait);\n  };\n}\n","import {\n  Box,\n  Location,\n  VisualizerSize,\n  MinMax,\n  VisualizerConfig,\n  VisualizerRenderInfo,\n  VisualizerChartSize\n} from '../shared.models';\nimport * as d3 from 'd3';\n\nexport function getMinMax(\n  fields: Array<string>,\n  data: Array<any>,\n  decorationMaxRate = 1\n): MinMax {\n  const mm = data.reduce(\n    (minMax: MinMax, d) => {\n      fields.forEach(field => {\n        const val = +d[field];\n        if (typeof val === 'number' && !isNaN(val)) {\n          minMax.min = Math.min(minMax.min, val);\n          minMax.max = Math.max(minMax.max, val);\n        }\n      });\n      return minMax;\n    },\n    { min: Infinity, max: -Infinity }\n  );\n  mm.max = mm.max * decorationMaxRate;\n  return mm;\n}\n\nexport function renderChartContainer(\n  el: HTMLElement,\n  visualizerSize: VisualizerSize\n) {\n  // apply margin\n  const svg = d3\n    .select(el)\n    .append('svg')\n    .attr('class', 'container')\n    .attr('width', visualizerSize.width)\n    .attr('height', visualizerSize.height);\n  return svg\n    .append('g')\n    .attr(\n      'transform',\n      `translate(${visualizerSize.margin.left},${visualizerSize.margin.top})`\n    );\n}\n\nexport function renderAxis(\n  svg: any,\n  location: Location,\n  axis,\n  size: VisualizerChartSize,\n  themeClass: string[] = []\n) {\n  svg = svg.append('g').attr('class', themeClass.join(' '));\n  switch (location) {\n    case Location.BOTTOM:\n      svg = svg.attr('transform', `translate(0,${size.height})`).call(axis);\n      if (size.rotateXAxisText) {\n        svg\n          .selectAll('.tick text')\n          .attr(\n            'style',\n            'transform: rotate(-45deg) translate(-4px,-6px);text-anchor:end;'\n          );\n      }\n      break;\n    case Location.RIGHT:\n      svg.attr('transform', `translate(${size.width},0)`).call(axis);\n      break;\n    case Location.LEFT:\n      svg.call(axis);\n      break;\n  }\n}\n\nexport function getSVGSize(el: HTMLElement, selector: string) {\n  const svg: SVGSVGElement = el.querySelector(selector);\n  return svg.getBBox();\n}\n\nexport function renderGrid(\n  svg: any,\n  direction: 'x' | 'y',\n  axis: any,\n  visualizerSize: Box,\n  themeClass: string[] = []\n) {\n  svg = svg.append('g').attr('class', themeClass.join(' '));\n  let tickSize;\n  switch (direction) {\n    case 'x':\n      svg = svg.attr('transform', `translate(0,${visualizerSize.height})`);\n      tickSize = -visualizerSize.height;\n      break;\n    case 'y':\n      tickSize = -visualizerSize.width;\n      break;\n  }\n  svg.call(axis.tickSize(tickSize).tickFormat(''));\n}\n\nexport function getAxisSize(\n  el: HTMLElement,\n  svg: any,\n  location: Location,\n  axis: any,\n  visualizerSize: VisualizerSize,\n  themeClass: string[] = []\n) {\n  renderAxis(svg, location, axis, visualizerSize, themeClass);\n  const boxSize = getSVGSize(el, '.' + themeClass[0]);\n  switch (location) {\n    case Location.BOTTOM:\n      visualizerSize = applyXAxisTextSize(el, visualizerSize, themeClass[0]);\n      break;\n    case Location.LEFT:\n      visualizerSize.margin.left = boxSize.width;\n      break;\n    case Location.RIGHT:\n      visualizerSize.margin.right = boxSize.width;\n  }\n  return visualizerSize;\n}\n\nexport function initVisualizerSize(el: HTMLElement): VisualizerSize {\n  const width = el.offsetWidth;\n  const height = el.offsetHeight;\n  return {\n    width,\n    height,\n    chart: {\n      width,\n      height,\n      rotateXAxisText: false // when overlapping the x axis text\n    },\n    margin: {\n      top: 0, // for showing the first y axis label\n      left: 0,\n      right: 0,\n      bottom: 0\n    }\n  };\n}\n\nexport function applyXAxisTextSize(el: any, size: VisualizerSize, cls: string) {\n  const els = el.querySelectorAll(`.${cls} .tick`);\n  const tickWidth =\n    els.length > 1 ? getTranslateX(els[1]) - getTranslateX(els[0]) : -1;\n  let lastTextSize;\n  const maxWidth: any = Array.from(els).reduce((max: number, _el: any) => {\n    lastTextSize = _el.getBBox();\n    return Math.max(lastTextSize.width, max);\n  }, -Infinity);\n  let textHeight = lastTextSize.height;\n  if (tickWidth < maxWidth) {\n    size.chart.rotateXAxisText = true;\n    textHeight = maxWidth;\n  }\n  size.margin.top = lastTextSize.height / 2;\n  size.margin.right = maxWidth / 2;\n  size.margin.bottom = size.chart.rotateXAxisText\n    ? textHeight + 5\n    : lastTextSize.height;\n  return size;\n}\n\nexport function getTranslateX(el) {\n  const t = el.getAttribute('transform');\n  const val = t.split('translate(')[1].split(',')[0];\n  return +val;\n}\n\nexport function renderRects(\n  config: VisualizerConfig,\n  renderInfo: VisualizerRenderInfo\n) {\n  const { svg, unit, size } = renderInfo;\n  const data = config.data.data;\n  const animDuration = 1000;\n\n  unit.xScaleInner = d3\n    .scaleBand()\n    .domain(unit.fields)\n    .rangeRound([0, unit.xScale.bandwidth()])\n    .padding(0);\n\n  let rects = svg\n    .append('g')\n    .selectAll('g')\n    .data(unit.labels)\n    .enter()\n    .append('g')\n    .attr('class', 'group rects')\n    .attr('transform', (label: string) => `translate(${unit.xScale(label)},0)`);\n\n  rects = rects\n    .selectAll('rect')\n    .data((d, i) =>\n      unit.fields.map(field => ({ field, value: +data[i][field] }))\n    );\n\n  // for updating data\n  rects\n    .exit()\n    .transition()\n    .duration(animDuration)\n    .remove();\n\n  rects = rects.enter().append('rect');\n\n  rects\n    .attr('class', 'item rect')\n    .attr('width', d => unit.xScaleInner.bandwidth(d.field))\n    .attr('x', d => unit.xScaleInner(d.field))\n    .attr('fill', d => unit.colorScale(d.field))\n    .attr('title', d => `${d.field}: ${d.value}`)\n    .attr(\n      'y',\n      unit.minMax.min < 0 ? size.height - size.margin.bottom : unit.yScale(0)\n    )\n    .attr('height', 0)\n    .transition()\n    .duration(animDuration)\n    .ease(d3.easeQuadIn)\n    .attr('y', d => (d.value > 0 ? unit.yScale(d.value) : unit.yScale(0)))\n    .attr('height', d => {\n      const h =\n        unit.minMax.min < 0\n          ? Math.abs(unit.yScale(d.value) - unit.yScale(0))\n          : size.chart.height - unit.yScale(d.value);\n      return h < 0 ? 0 : h;\n    });\n}\n\nexport function renderLines(\n  config: VisualizerConfig,\n  renderInfo: VisualizerRenderInfo\n) {\n  const { svg, unit, size } = renderInfo;\n  const data = config.data.data;\n  const animDuration = 1000;\n\n  const fieldLabelValueMap = unit.labels.reduce((map, label, rowIndex) => {\n    unit.fields.forEach(field => {\n      const labelValues = map.get(field) || [];\n      labelValues.push({ field, label, value: data[rowIndex][field] });\n      map.set(field, labelValues);\n    });\n    return map;\n  }, new Map<string, Array<any>>());\n\n  const lineData = [...fieldLabelValueMap.values()];\n\n  unit.line = d3\n    .line()\n    .x((d: any) => unit.xScale(d.label))\n    .y((d: any) => unit.yScale(d.value));\n\n  const line = svg\n    .selectAll('.lines')\n    .data(lineData)\n    .enter()\n    .append('g')\n    .attr('class', 'lines')\n    .attr('transform', d => `translate(${unit.xScale.bandwidth() / 2},0)`);\n\n  const path = line\n    .append('path')\n    .attr('class', 'line')\n    .attr('d', d => unit.line(d))\n    .style('stroke', d => unit.colorScale(d[0].field))\n    .style('stroke-width', 1.5)\n    .style('stroke-linejoin', 'round')\n    .style('stroke-linecap', 'round')\n    .style('fill', 'none')\n    .attr('stroke-dasharray', function() {\n      const totalLength = this.getTotalLength();\n      return totalLength + ' ' + totalLength;\n    })\n    .attr('stroke-dashoffset', function() {\n      const totalLength = this.getTotalLength();\n      return totalLength;\n    })\n    .transition()\n    .duration(animDuration)\n    .ease(d3.easeLinear)\n    .attr('stroke-dashoffset', 0);\n\n  const circle = svg\n    .selectAll('.circles')\n    .data(lineData)\n    .enter()\n    .append('g')\n    .attr('class', 'circles')\n    .attr('transform', d => `translate(${unit.xScale.bandwidth() / 2},0)`);\n\n  const circles = circle\n    .selectAll('circle')\n    .data(d => d)\n    .enter()\n    .append('circle');\n  circles\n    .attr('class', 'circle')\n    .attr('cx', d => unit.xScale(d.label))\n    .attr('cy', d => unit.yScale(d.value))\n    .attr('r', '2')\n    .attr('onmouseover', 'this.setAttribute(\"r\", 4)')\n    .attr('onmouseout', 'this.setAttribute(\"r\", 2)')\n    .style('stroke', d => unit.colorScale(d.field))\n    .style('fill', '#fff');\n}\n","/*\n * Public API Surface of mc-ui\n */\n\nexport * from './lib/shared.service';\nexport * from './lib/mc-ui.module';\nexport * from './lib/shared.models';\nexport * from './lib/components/icon/icon.component';\nexport * from './lib/components/list/list.component';\nexport * from './lib/components/list/list-item.component';\nexport * from './lib/components/mask/mask.component';\nexport * from './lib/components/drawer/drawer.component';\nexport * from './lib/components/scrollbar/scrollbar.component';\nexport * from './lib/components/popup/popup.component';\nexport * from './lib/components/grid/grid.component';\nexport * from './lib/components/grid/grid-body.component';\nexport * from './lib/components/grid/grid-header.component';\nexport * from './lib/components/scroll/scroll.component';\nexport * from './lib/components/loader/loader.component';\nexport * from './lib/components/visualizer/visualizer.component';\nexport * from './lib/components/form/fields/text/text.component';\n","import {\n  ViewContainerRef,\n  Input,\n  OnInit,\n  OnDestroy,\n  AfterViewInit\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nexport class AppBaseComponent implements OnInit, OnDestroy, AfterViewInit {\n  el: HTMLElement;\n  private _subscriptions = [];\n\n  @Input()\n  set subscriptions(value: Subscription) {\n    if (value) {\n      this._subscriptions.push(value);\n    }\n  }\n\n  constructor(protected vcr: ViewContainerRef) {\n    this.el = vcr.element.nativeElement;\n  }\n\n  ngOnInit() {\n    this.initCmp();\n  }\n\n  ngAfterViewInit() {\n    setTimeout(_ => this.afterInitCmp());\n  }\n\n  ngOnDestroy() {\n    this.unsubscribeAll();\n    this.destroyCmp();\n  }\n\n  initCmp() {\n    // empty\n  }\n\n  afterInitCmp() {\n    // for Input() properties that are initialized after initCmp. e.g) \"config\" property for entryComponents\n  }\n\n  unsubscribeAll() {\n    this._subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  destroyCmp() {\n    // to remove dom elements reference etc.\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ViewContainerRef } from '@angular/core';\nimport {\n  VisualizerData,\n  InputActionEvent,\n  InputAction,\n  VisualizerAction,\n  VisualizerActionEvent,\n  VisualizerType\n} from 'projects/mc-ui/src/public-api';\nimport { AppBaseComponent } from './app-base.component';\nimport { AppService } from './app.service';\nimport { NasdaqCompany } from './models';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent extends AppBaseComponent {\n  data: VisualizerData;\n  dailyData: VisualizerData;\n  barData: VisualizerData;\n  lineData: VisualizerData;\n  VisualizerType = VisualizerType;\n\n  constructor(protected vcr: ViewContainerRef, private appService: AppService) {\n    super(vcr);\n  }\n\n  loadCompanies(keyword: string) {\n    if (keyword) {\n      this.appService\n        .getNasdaqCompanies(keyword)\n        .subscribe(data => (this.data = data));\n    }\n  }\n\n  loadDailyDataBySymbol(symbol: string) {\n    this.appService\n      .getDailyDataBySymbol(symbol)\n      .subscribe(data => {\n        this.dailyData = data;\n        // Test data\n        this.barData = {\n          columns: data.columns,\n          data: data.data.slice(0, 10)\n        };\n        this.lineData = {\n          columns: data.columns,\n          data: data.data.slice(0, 10)\n        };\n      });\n  }\n\n  onTextAction(e: InputActionEvent) {\n    switch (e.action) {\n      case InputAction.CHANGE:\n        this.loadCompanies(e.value);\n        break;\n    }\n  }\n\n  onCompanyVizAction(e: VisualizerActionEvent) {\n    switch (e.action) {\n      case VisualizerAction.SELECT_ITEM:\n        const data: NasdaqCompany = e.data;\n        this.loadDailyDataBySymbol(data.Symbol);\n        break;\n    }\n  }\n}\n","<mc-text\n  [config]=\"{\n  name: 'company',\n  value: 'ASTC'\n}\"\n  (action)=\"onTextAction($event)\"\n></mc-text>\n<div class=\"body\">\n  <div class=\"left\">\n    <mc-visualizer\n      [style.height.px]=\"350\"\n      [config]=\"{\n  themes: ['companies'],\n  gridConfig: {\n    idField: 'symbol'\n  }\n}\"\n      [data]=\"data\"\n      (action)=\"onCompanyVizAction($event)\"\n    ></mc-visualizer>\n    <mc-visualizer\n      [style.height.px]=\"350\"\n      [config]=\"{\n  themes: ['daily'],\n  gridConfig: {\n    idField: 'Date'\n  }\n}\"\n      [data]=\"dailyData\"\n    ></mc-visualizer>\n  </div>\n  <div class=\"right\">\n    <mc-visualizer\n      [style.height.px]=\"350\"\n      [config]=\"{\n  themes: ['daily'],\n  type: VisualizerType.BAR,\n  labelField: 'Date',\n  dataFields: ['Open', 'High', 'Low', 'Close', 'Adj Close', 'Volume']\n}\"\n      [data]=\"barData\"\n    ></mc-visualizer>\n    <mc-visualizer\n      [style.height.px]=\"350\"\n      [config]=\"{\n  themes: ['daily'],\n  type: VisualizerType.LINE,\n  labelField: 'Date',\n  dataFields: ['Open', 'High', 'Low', 'Close', 'Adj Close', 'Volume']\n}\"\n      [data]=\"lineData\"\n    ></mc-visualizer>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { McUiModule } from './../../projects/mc-ui/src/public-api';\nimport { AppService } from './app.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    McUiModule\n  ],\n  providers: [\n    AppService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { VisualizerData } from 'projects/mc-ui/src/public-api';\nimport { Observable } from 'rxjs';\nimport {\n  convertCsvToVisualizerData\n} from 'projects/mc-ui/src/lib/utils/data-utils';\n\n@Injectable()\nexport class AppService {\n  constructor(private http: HttpClient) {}\n\n  getNasdaqCompanies(symbol: string = ''): Observable<VisualizerData> {\n    return this.http\n      .get('../test/data/nasdaqlisted.txt', { responseType: 'text' })\n      .pipe(\n        map(data =>\n          convertCsvToVisualizerData(data, [\n            { field: 'Symbol', keyword: symbol }\n          ])\n        )\n      );\n  }\n\n  getDailyDataBySymbol(symbol: string): Observable<VisualizerData> {\n    return this.http\n      .get(`../test/data/${symbol}.csv`, { responseType: 'text' })\n      .pipe(map(data => convertCsvToVisualizerData(data)));\n  }\n\n  // getCompanies(keyword: string = ''): Observable<Array<VisualizerData>> {\n  //   const params = new HttpParams()\n  //     .set(\n  //       AlphaVantageAPIParamKey.function,\n  //       AlphaVantageAPIFunction.SYMBOL_SEARCH\n  //     )\n  //     .set(AlphaVantageAPIParamKey.keywords, keyword)\n  //     .set(AlphaVantageAPIParamKey.apikey, AlphaVantageAPI.key);\n  //   return this.http\n  //     .get(AlphaVantageAPI.url, { params })\n  //     .pipe(map((data: CompanyBestMatches) => this.normalizeComponies(data)));\n  // }\n\n  // normalizeComponies(data: CompanyBestMatches): Array<VisualizerData> {\n  //   const VisualizerDataMap = new Map<string, VisualizerData>();\n  //   data.bestMatches.forEach(row => {\n  //     Object.keys(row).forEach(key =>\n  //       this.addVisualizerDataValues(key, row[key], VisualizerDataMap)\n  //     );\n  //   });\n  //   return [...VisualizerDataMap.values()];\n  // }\n\n  // getTimeSeries(\n  //   symbol: string,\n  //   fn: AlphaVantageAPIFunction = AlphaVantageAPIFunction.TIME_SERIES_DAILY,\n  //   outputsize: AlphaVantageAPIOutputSize = AlphaVantageAPIOutputSize.compact\n  // ) {\n  //   const params = new HttpParams()\n  //     .set(AlphaVantageAPIParamKey.function, fn)\n  //     .set(AlphaVantageAPIParamKey.symbol, symbol)\n  //     .set(AlphaVantageAPIParamKey.outputsize, outputsize)\n  //     .set(AlphaVantageAPIParamKey.apikey, AlphaVantageAPI.key);\n  //   return this.http\n  //     .get(AlphaVantageAPI.url, { params })\n  //     .pipe(map((data: TimeSeries) => this.normalizeTimeseries(data, fn)));\n  // }\n\n  // normalizeTimeseries(\n  //   data: TimeSeries,\n  //   fn: AlphaVantageAPIFunction\n  // ): Array<VisualizerData> {\n  //   const VisualizerDataMap = new Map<string, VisualizerData>();\n  //   switch (fn) {\n  //     case AlphaVantageAPIFunction.TIME_SERIES_DAILY:\n  //       const d = data[TimeSeriesType.TIME_SERIES_DAILY];\n  //       Object.keys(d).forEach(date => {\n  //         this.addVisualizerDataValues('date', simpleFormatDate(date), VisualizerDataMap);\n  //         const keyVal = d[date];\n  //         Object.keys(keyVal).forEach(key =>\n  //           this.addVisualizerDataValues(key, keyVal[key], VisualizerDataMap)\n  //         );\n  //       });\n  //       return [...VisualizerDataMap.values()];\n  //   }\n  //   return [];\n  // }\n\n  // addVisualizerDataValues(\n  //   key: string,\n  //   value: any,\n  //   VisualizerDataMap: Map<string, VisualizerData>\n  // ): Map<string, VisualizerData> {\n  //   key = key.includes('. ') ? key.split('. ')[1] : key;\n  //   if (!VisualizerDataMap.has(key)) {\n  //     VisualizerDataMap.set(key, { label: key, values: [] });\n  //   }\n  //   const VisualizerData = VisualizerDataMap.get(key);\n  //   VisualizerData.values.push({ value });\n  //   VisualizerDataMap.set(key, VisualizerData);\n  //   return VisualizerDataMap;\n  // }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}